{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteEditor(props) {\n  _s();\n\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  const onValueChange = () => {\n    if (editorRef.current) {\n      localStorage.setItem('currentEdition', props.id + \"^%^sep\" + props.title + \"^%^sep\" + props.book + \"^%^sep\" + editorRef.current.getContent().toString());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      onChange: onValueChange,\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: localStorage.getItem('currentEdition') ? localStorage.getItem('currentEdition').split(\"^%^sep\")[3] : 'You can start taking notes!',\n      init: {\n        height: 500,\n        menubar: false,\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n        toolbar: 'undo redo | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px;}}'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      onClick: log,\n      text: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n\n_c = NoteEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useRef","Editor","ButtonPrimary","NoteEditor","props","editorRef","log","current","console","getContent","onValueChange","localStorage","setItem","id","title","book","toString","evt","editor","getItem","split","height","menubar","plugins","toolbar","content_style"],"sources":["/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/editor.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\n\n\n\nexport default function NoteEditor(props) {\n\nconst editorRef = useRef(null);\n\n \n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  const onValueChange = () => {\n    if (editorRef.current) {\n      localStorage.setItem('currentEdition', props.id + \"^%^sep\" + props.title + \"^%^sep\" + props.book + \"^%^sep\" + editorRef.current.getContent().toString());\n    }\n  };\n\n  return ( \n    <div align=\"left\">\n      <Editor \n      onChange={onValueChange}\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue={localStorage.getItem('currentEdition')? localStorage.getItem('currentEdition').split(\"^%^sep\")[3] : 'You can start taking notes!'}\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [\n            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n            'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n          ],\n          toolbar: 'undo redo | ' +\n            'bold italic forecolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px;}}'\n        }}\n      /> \n      <br/>\n      <ButtonPrimary onClick={log} text=\"Save\"></ButtonPrimary>\n    </div> \n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAIA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAE1C,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;;EAGE,MAAMM,GAAG,GAAG,MAAM;IAChB,IAAID,SAAS,CAACE,OAAd,EAAuB;MACrBC,OAAO,CAACF,GAAR,CAAYD,SAAS,CAACE,OAAV,CAAkBE,UAAlB,EAAZ;IACD;EACF,CAJD;;EAMA,MAAMC,aAAa,GAAG,MAAM;IAC1B,IAAIL,SAAS,CAACE,OAAd,EAAuB;MACrBI,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCR,KAAK,CAACS,EAAN,GAAW,QAAX,GAAsBT,KAAK,CAACU,KAA5B,GAAoC,QAApC,GAA+CV,KAAK,CAACW,IAArD,GAA4D,QAA5D,GAAuEV,SAAS,CAACE,OAAV,CAAkBE,UAAlB,GAA+BO,QAA/B,EAA9G;IACD;EACF,CAJD;;EAMA,oBACE;IAAK,KAAK,EAAC,MAAX;IAAA,wBACE,QAAC,MAAD;MACA,QAAQ,EAAEN,aADV;MAEE,MAAM,EAAE,CAACO,GAAD,EAAMC,MAAN,KAAiBb,SAAS,CAACE,OAAV,GAAoBW,MAF/C;MAGE,YAAY,EAAEP,YAAY,CAACQ,OAAb,CAAqB,gBAArB,IAAwCR,YAAY,CAACQ,OAAb,CAAqB,gBAArB,EAAuCC,KAAvC,CAA6C,QAA7C,EAAuD,CAAvD,CAAxC,GAAoG,6BAHpH;MAIE,IAAI,EAAE;QACJC,MAAM,EAAE,GADJ;QAEJC,OAAO,EAAE,KAFL;QAGJC,OAAO,EAAE,CACP,SADO,EACI,UADJ,EACgB,OADhB,EACyB,MADzB,EACiC,OADjC,EAC0C,SAD1C,EACqD,SADrD,EAEP,QAFO,EAEG,eAFH,EAEoB,cAFpB,EAEoC,MAFpC,EAE4C,YAF5C,EAGP,gBAHO,EAGW,OAHX,EAGoB,OAHpB,EAG6B,MAH7B,EAGqC,MAHrC,EAG6C,WAH7C,CAHL;QAQJC,OAAO,EAAE,iBACP,gDADO,GAEP,6DAFO,GAGP,qBAXE;QAYJC,aAAa,EAAE;MAZX;IAJR;MAAA;MAAA;MAAA;IAAA,QADF,eAoBE;MAAA;MAAA;MAAA;IAAA,QApBF,eAqBE,QAAC,aAAD;MAAe,OAAO,EAAEnB,GAAxB;MAA6B,IAAI,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA1CuBH,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}