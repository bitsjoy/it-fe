{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport { Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteEditor(props) {\n  _s();\n\n  const editorRef = useRef(null);\n  const [title, setTitle] = useState(props.title);\n  useEffect(() => {}, [props.noteBody]);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  const onValueChange = inst => {\n    alert(props.id);\n\n    if (editorRef.current) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: props.noteBody ? props.noteBody : \"<p>fsfs</p>\",\n      init: {\n        onchange_callback: {\n          onValueChange\n        },\n        height: 500,\n        menubar: false,\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n        toolbar: 'undo redo | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px;}}'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      onClick: log,\n      text: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteEditor, \"jvnllX9HdvwkefOJ8dSLdo6XO3E=\");\n\n_c = NoteEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Editor","ButtonPrimary","Input","NoteEditor","props","editorRef","title","setTitle","noteBody","log","current","console","getContent","onValueChange","inst","alert","id","evt","editor","onchange_callback","height","menubar","plugins","toolbar","content_style"],"sources":["/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/editor.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react' \nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport { Input } from 'antd';\n\n\n\nexport default function NoteEditor(props) {\n\nconst editorRef = useRef(null);\nconst [ title, setTitle ] = useState(props.title) ;\n\nuseEffect(()=> {\n    \n}, [props.noteBody])\n \n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  const onValueChange = (inst) => {\n    alert(props.id);\n    if (editorRef.current) {\n    }\n  };\n\n  return ( \n    <div align=\"left\">\n        <Input type=\"text\" value={title} />\n      <Editor  \n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue={props.noteBody? props.noteBody : \"<p>fsfs</p>\"}\n        init={{\n        onchange_callback : {onValueChange},\n          height: 500,\n          menubar: false,\n          plugins: [\n            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n            'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n          ],\n          toolbar: 'undo redo | ' +\n            'bold italic forecolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px;}}'\n        }}\n      /> \n      <br/>\n      <ButtonPrimary onClick={log} text=\"Save\"></ButtonPrimary>\n    </div> \n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAIA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAE1C,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;EACA,MAAM,CAAEQ,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAACK,KAAK,CAACE,KAAP,CAApC;EAEAT,SAAS,CAAC,MAAK,CAEd,CAFQ,EAEN,CAACO,KAAK,CAACI,QAAP,CAFM,CAAT;;EAIE,MAAMC,GAAG,GAAG,MAAM;IAChB,IAAIJ,SAAS,CAACK,OAAd,EAAuB;MACrBC,OAAO,CAACF,GAAR,CAAYJ,SAAS,CAACK,OAAV,CAAkBE,UAAlB,EAAZ;IACD;EACF,CAJD;;EAMA,MAAMC,aAAa,GAAIC,IAAD,IAAU;IAC9BC,KAAK,CAACX,KAAK,CAACY,EAAP,CAAL;;IACA,IAAIX,SAAS,CAACK,OAAd,EAAuB,CACtB;EACF,CAJD;;EAMA,oBACE;IAAK,KAAK,EAAC,MAAX;IAAA,wBACI,QAAC,KAAD;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEJ;IAA1B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEE,QAAC,MAAD;MACE,MAAM,EAAE,CAACW,GAAD,EAAMC,MAAN,KAAiBb,SAAS,CAACK,OAAV,GAAoBQ,MAD/C;MAEE,YAAY,EAAEd,KAAK,CAACI,QAAN,GAAgBJ,KAAK,CAACI,QAAtB,GAAiC,aAFjD;MAGE,IAAI,EAAE;QACNW,iBAAiB,EAAG;UAACN;QAAD,CADd;QAEJO,MAAM,EAAE,GAFJ;QAGJC,OAAO,EAAE,KAHL;QAIJC,OAAO,EAAE,CACP,SADO,EACI,UADJ,EACgB,OADhB,EACyB,MADzB,EACiC,OADjC,EAC0C,SAD1C,EACqD,SADrD,EAEP,QAFO,EAEG,eAFH,EAEoB,cAFpB,EAEoC,MAFpC,EAE4C,YAF5C,EAGP,gBAHO,EAGW,OAHX,EAGoB,OAHpB,EAG6B,MAH7B,EAGqC,MAHrC,EAG6C,WAH7C,CAJL;QASJC,OAAO,EAAE,iBACP,gDADO,GAEP,6DAFO,GAGP,qBAZE;QAaJC,aAAa,EAAE;MAbX;IAHR;MAAA;MAAA;MAAA;IAAA,QAFF,eAqBE;MAAA;MAAA;MAAA;IAAA,QArBF,eAsBE,QAAC,aAAD;MAAe,OAAO,EAAEf,GAAxB;MAA6B,IAAI,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GA/CuBN,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}