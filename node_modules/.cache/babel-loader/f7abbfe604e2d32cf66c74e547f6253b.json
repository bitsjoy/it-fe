{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NoteMaker() {\n  _s();\n\n  const editorRef = useRef(null);\n  const [editable, setEditable] = useState(false);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [editable && /*#__PURE__*/_jsxDEV(Editor, {\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: \"<p>This is the initial content of the editor.</p>\",\n      init: {\n        height: 500,\n        menubar: false,\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n        toolbar: 'undo redo | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this), !editable && /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: () => {\n        setEditable(true);\n      },\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: \"<p>This is the initial content of the editor.</p>\",\n      init: {\n        height: 500,\n        menubar: false,\n        plugins: [],\n        toolbar: '',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: log,\n      children: \"Log editor content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NoteMaker, \"zPnAl37PwT5Ly3OIfQ8sx/mKumc=\");\n\n_c = NoteMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteMaker\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Editor","NoteMaker","editorRef","editable","setEditable","log","current","console","getContent","evt","editor","height","menubar","plugins","toolbar","content_style"],"sources":["/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Editor } from '@tinymce/tinymce-react';\n\n\n\nexport default function NoteMaker() {\n\nconst editorRef = useRef(null);\nconst [editable, setEditable] = useState(false);\n\n \n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  return ( \n    <>\n      { editable && <Editor\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue=\"<p>This is the initial content of the editor.</p>\"\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [\n            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n            'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n          ],\n          toolbar: 'undo redo | ' +\n            'bold italic forecolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n        }}\n      /> } \n      { !editable && <Editor  \n        onChange={()=>{setEditable(true)}}\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue=\"<p>This is the initial content of the editor.</p>\"\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [],\n          toolbar: '',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n        }}\n      /> }\n      <button onClick={log}>Log editor content</button>\n    </> \n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAIA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAEpC,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;;EAGE,MAAMM,GAAG,GAAG,MAAM;IAChB,IAAIH,SAAS,CAACI,OAAd,EAAuB;MACrBC,OAAO,CAACF,GAAR,CAAYH,SAAS,CAACI,OAAV,CAAkBE,UAAlB,EAAZ;IACD;EACF,CAJD;;EAMA,oBACE;IAAA,WACIL,QAAQ,iBAAI,QAAC,MAAD;MACZ,MAAM,EAAE,CAACM,GAAD,EAAMC,MAAN,KAAiBR,SAAS,CAACI,OAAV,GAAoBI,MADjC;MAEZ,YAAY,EAAC,mDAFD;MAGZ,IAAI,EAAE;QACJC,MAAM,EAAE,GADJ;QAEJC,OAAO,EAAE,KAFL;QAGJC,OAAO,EAAE,CACP,SADO,EACI,UADJ,EACgB,OADhB,EACyB,MADzB,EACiC,OADjC,EAC0C,SAD1C,EACqD,SADrD,EAEP,QAFO,EAEG,eAFH,EAEoB,cAFpB,EAEoC,MAFpC,EAE4C,YAF5C,EAGP,gBAHO,EAGW,OAHX,EAGoB,OAHpB,EAG6B,MAH7B,EAGqC,MAHrC,EAG6C,WAH7C,CAHL;QAQJC,OAAO,EAAE,iBACP,gDADO,GAEP,6DAFO,GAGP,qBAXE;QAYJC,aAAa,EAAE;MAZX;IAHM;MAAA;MAAA;MAAA;IAAA,QADhB,EAmBI,CAACZ,QAAD,iBAAa,QAAC,MAAD;MACb,QAAQ,EAAE,MAAI;QAACC,WAAW,CAAC,IAAD,CAAX;MAAkB,CADpB;MAEb,MAAM,EAAE,CAACK,GAAD,EAAMC,MAAN,KAAiBR,SAAS,CAACI,OAAV,GAAoBI,MAFhC;MAGb,YAAY,EAAC,mDAHA;MAIb,IAAI,EAAE;QACJC,MAAM,EAAE,GADJ;QAEJC,OAAO,EAAE,KAFL;QAGJC,OAAO,EAAE,EAHL;QAIJC,OAAO,EAAE,EAJL;QAKJC,aAAa,EAAE;MALX;IAJO;MAAA;MAAA;MAAA;IAAA,QAnBjB,eA+BE;MAAQ,OAAO,EAAEV,GAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/BF;EAAA,gBADF;AAmCD;;GA/CuBJ,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}