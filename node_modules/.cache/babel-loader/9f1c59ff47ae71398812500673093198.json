{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/index.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Row, Collapse, Button } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport NoteEditor from './editor';\nimport Viewer from './viewer';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NoteMaker() {\n  _s();\n\n  const [currentNoteId, setCurrentNoteId] = useState(\"ll\");\n  const [currentNoteTitle, setCurrentNoteTitle] = useState(\"ll\");\n  const [currentBook, setCurrentBook] = useState(\"kk\");\n  const [currentNoteBody, setCurrentNoteBody] = useState(\"<p>kk</p>\");\n  const [edit, setEdit] = useState(false);\n  const [notes, setNotes] = useState({\n    \"Book Title a\": [{\n      noteId: \"a\",\n      noteTitle: 'Sample note a'\n    }],\n    \"Book Title b\": [{\n      noteId: \"b\",\n      noteTitle: 'Sample note b'\n    }]\n  });\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      id: \"lp\",\n      align: \"center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 0\n        },\n        md: {\n          span: 19\n        },\n        children: [edit && /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            onInit: (evt, editor) => editorRef.current = editor,\n            initialValue: currentNoteBody,\n            init: {\n              height: 500,\n              menubar: false,\n              plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n              toolbar: 'undo redo | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px;}}'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), !edit && /*#__PURE__*/_jsxDEV(Viewer, {\n          rawHtmlBody: currentNoteBody,\n          title: currentNoteTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEdit(edit ? false : true);\n            setCurrentNoteBody(\"<p>polo</p>\");\n          },\n          children: \"fsfs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 0\n        },\n        md: {\n          span: 5\n        },\n        align: \"center\",\n        children: [!edit && /*#__PURE__*/_jsxDEV(Collapse, {\n          style: {\n            fontWeight: '700',\n            width: '100%'\n          },\n          defaultActiveKey: ['1'],\n          onChange: () => {},\n          align: \"left\",\n          children: Object.keys(notes).length !== 0 ? Object.keys(notes).map((Key, i) => {\n            return /*#__PURE__*/_jsxDEV(Collapse.Panel, {\n              header: Key,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                align: \"left\",\n                children: notes[Key].map(note => {\n                  return /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      // fetch note and set the variables in state with the returned data\n                      console.log(Key.toString(), note.noteId, note.noteTitle);\n                      setCurrentBook(Key.toString());\n                      setCurrentNoteTitle(note.noteTitle);\n                      setCurrentNoteId(note.noteId);\n                      setCurrentNoteBody(\"lolpoo\");\n                    },\n                    type: \"link\",\n                    children: note.noteTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 40\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 28\n            }, this);\n          }) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }, this), edit && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          styl: {\n            width: '70%'\n          },\n          onClick: log,\n          text: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(NoteMaker, \"6jWKQR4CXob5nF16JwlAk0LTa6s=\");\n\n_c = NoteMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteMaker\");","map":{"version":3,"names":["Col","Row","Collapse","Button","axios","React","useEffect","useRef","useState","NoteEditor","Viewer","Editor","ButtonPrimary","NoteMaker","currentNoteId","setCurrentNoteId","currentNoteTitle","setCurrentNoteTitle","currentBook","setCurrentBook","currentNoteBody","setCurrentNoteBody","edit","setEdit","notes","setNotes","noteId","noteTitle","editorRef","log","current","console","getContent","minHeight","span","evt","editor","height","menubar","plugins","toolbar","content_style","fontWeight","width","Object","keys","length","map","Key","i","note","toString"],"sources":["/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/index.js"],"sourcesContent":["import { Col, Row, Collapse, Button } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport NoteEditor from './editor';\nimport Viewer from './viewer';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\n\n\n\nexport default function NoteMaker() {\n \n   const [ currentNoteId, setCurrentNoteId] = useState(\"ll\");\n   const [ currentNoteTitle, setCurrentNoteTitle] = useState(\"ll\");\n   const [ currentBook, setCurrentBook] = useState(\"kk\");\n   const [ currentNoteBody, setCurrentNoteBody] = useState(\"<p>kk</p>\");\n\n  const [ edit, setEdit ] = useState(false);\n  const [notes, setNotes ] = useState({\n    \"Book Title a\" : [{noteId: \"a\", noteTitle: 'Sample note a'}],\n    \"Book Title b\" : [{noteId: \"b\", noteTitle: 'Sample note b'}], \n    });\n\n     \nconst editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n \n\n  return ( \n    <>\n      <Row id=\"lp\" align=\"center\" style={{minHeight: '100vh'}}>\n        <Col xs={{span: 0}} md={{span: 19}}>\n            {\n                edit && <div align=\"right\">\n        \n                <Editor  \n                  onInit={(evt, editor) => editorRef.current = editor}\n                  initialValue={currentNoteBody}\n                  init={{ \n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                      'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                      'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                      'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n                    ],\n                    toolbar: 'undo redo | ' +\n                      'bold italic forecolor | alignleft aligncenter ' +\n                      'alignright alignjustify | bullist numlist outdent indent | ' +\n                      'removeformat | help',\n                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px;}}'\n                  }}\n                />  \n              </div> \n            }\n            {\n                !edit && <Viewer rawHtmlBody={currentNoteBody} title={currentNoteTitle}/>\n            }\n            <button onClick={()=>{\n                setEdit(edit? false :true);\n                setCurrentNoteBody(\"<p>polo</p>\")\n            }}>fsfs</button>\n        </Col>\n        <Col xs={{span: 0}} md={{span: 5}} align=\"center\">\n        {!edit && <Collapse style={{fontWeight: '700', width: '100%'}} defaultActiveKey={['1']} onChange={()=>{}} align=\"left\">\n            {\n                Object.keys(notes).length !== 0 ? Object.keys(notes).map((Key, i) => {\n                    return <Collapse.Panel header={Key} key={i}>\n                        <div align=\"left\">\n                        {\n                            notes[Key].map(note => {\n                                return <Button onClick={()=>{\n                                    // fetch note and set the variables in state with the returned data\n                                    console.log(Key.toString(), note.noteId, note.noteTitle);\n                                    setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId); setCurrentNoteBody(\"lolpoo\");\n                                }} type=\"link\">{note.noteTitle}</Button>\n                            })\n                        }\n                        </div>\n                    </Collapse.Panel> \n                }) : ''\n            }\n    </Collapse>}\n\n    {\n        edit && <ButtonPrimary styl={{width: '70%'}} onClick={log} text=\"Save\"></ButtonPrimary>\n    }\n        </Col>\n      </Row>\n    </> \n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}