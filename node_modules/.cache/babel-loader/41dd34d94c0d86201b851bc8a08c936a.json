{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/index.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Row, Collapse, Button, Input } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Viewer from './viewer';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport { BackwardFilled, BackwardOutlined, CloseSquareOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, StepBackwardOutlined, SyncOutlined } from '@ant-design/icons';\nimport { API_BASE } from '../../apiConfig';\nimport { bearer_token_key } from './../../localStorageConfig';\nimport { toast } from 'react-toastify';\nimport { noteMaker } from '../../assets';\nimport { btnBackgroundColor } from '../../uiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NoteMaker() {\n  _s();\n\n  const [currentNoteId, setCurrentNoteId] = useState(null);\n  const [currentNoteTitle, setCurrentNoteTitle] = useState(null);\n  const [currentBook, setCurrentBook] = useState(null);\n  const [currentNoteBody, setCurrentNoteBody] = useState(\"<p>Type here</p>\");\n  const [edit, setEdit] = useState(false);\n  const [notes, setNotes] = useState(null);\n  const [newNoteWindow, setNewNoteWindow] = useState(false);\n  const [loadingNoteBody, setLoadingNoteBody] = useState(false);\n  const [savingNoteProcess, setSavingNoteProcess] = useState(false);\n  const [updatingNoteProcess, setUpdatingNoteProcess] = useState(false);\n  const [deleteNoteProcess, setDeleteNoteProcess] = useState(false);\n  const editorRef = useRef(null);\n  useEffect(() => {\n    //alert(\"1\");\n    if (notes == null) {\n      axios.post(API_BASE + '/api/user/getUserNotes', {\n        email: localStorage.getItem('bitsjoy_email')\n      }, {\n        headers: {\n          'Authorization': localStorage.getItem(bearer_token_key),\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setNotes(res.data.notes);\n        console.log(res.data);\n      }).catch(err => {\n        toast.error(err.message);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (currentNoteId != null && currentNoteId != \"\") {\n      setLoadingNoteBody(true);\n      console.log(currentNoteId);\n      axios.post(API_BASE + '/api/notes/getNote', {\n        noteId: currentNoteId,\n        idOfAccessor: localStorage.getItem('bitsjoy_userId')\n      }, {\n        headers: {\n          'Authorization': localStorage.getItem(bearer_token_key),\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setCurrentNoteBody(res.data.body);\n        setLoadingNoteBody(false); //  alert(res.data.body);\n      }).catch(err => {\n        toast.error(err.message);\n        setLoadingNoteBody(false);\n      });\n    }\n  }, [currentNoteId]);\n\n  const closeViewer = () => {\n    setCurrentNoteId(null);\n  };\n\n  const saveNote = () => {\n    console.log(editorRef.current.getContent());\n    setSavingNoteProcess(true);\n    const date = new Date();\n\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n      axios.post(API_BASE + '/api/notes/createNote', {\n        \"dateUpdated\": date,\n        \"dateCreated\": date,\n        \"title\": currentNoteTitle,\n        \"body\": editorRef.current.getContent() == \"\" ? \"<i>No content, edit note to add content</i>\" : editorRef.current.getContent(),\n        \"author\": {\n          id: localStorage.getItem('bitsjoy_userId'),\n          fullName: localStorage.getItem('bitsjoy_name'),\n          ppImageLink: localStorage.getItem('bitsjoy_ppImageLink')\n        },\n        \"accessibleTo\": [localStorage.getItem('bitsjoy_userId')],\n        \"bookTitle\": currentBook\n      }, {\n        headers: {\n          'Authorization': localStorage.getItem(bearer_token_key),\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        window.location.reload();\n        setSavingNoteProcess(false);\n      }).catch(err => {\n        toast.error(err.response.data.message);\n        setSavingNoteProcess(false);\n      });\n    }\n  };\n\n  const updateNote = () => {\n    setUpdatingNoteProcess(true);\n    const date = new Date();\n\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n      axios.put(API_BASE + '/api/notes/updateNote', {\n        \"dateUpdated\": date,\n        \"title\": currentNoteTitle,\n        \"noteBody\": editorRef.current.getContent() == \"\" ? \"<i>No content, edit note to add content</i>\" : editorRef.current.getContent(),\n        \"authorId\": localStorage.getItem('bitsjoy_userId'),\n        \"accessibleTo\": [localStorage.getItem('bitsjoy_userId')],\n        \"bookTitle\": currentBook,\n        \"noteId\": currentNoteId\n      }, {\n        headers: {\n          'Authorization': localStorage.getItem(bearer_token_key),\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        toast.success(\"Note updated\");\n        setUpdatingNoteProcess(false);\n      }).catch(err => {\n        toast.error(err.data.response.message);\n        setUpdatingNoteProcess(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      id: \"lp\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 0\n        },\n        md: {\n          span: 18\n        },\n        children: [edit && /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            required: true,\n            type: \"text\",\n            value: currentNoteTitle,\n            onChange: e => {\n              setCurrentNoteTitle(e.target.value);\n            },\n            style: {\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            onInit: (evt, editor) => editorRef.current = editor,\n            initialValue: currentNoteBody,\n            init: {\n              height: 500,\n              menubar: false,\n              plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n              toolbar: 'undo redo | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n              content_style: 'body {font-weight: 300; font-size:14px;}'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), newNoteWindow && /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"left\",\n          children: [\"Book Title: \", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: currentBook,\n            onChange: e => {\n              setCurrentBook(e.target.value.trim() == \"\" ? null : e.target.value);\n            },\n            style: {\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), \"Note Title : \", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: currentNoteTitle,\n            onChange: e => {\n              setCurrentNoteTitle(e.target.value.trim() == \"\" ? null : e.target.value);\n            },\n            style: {\n              fontWeight: '700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            onInit: (evt, editor) => editorRef.current = editor,\n            initialValue: currentNoteBody,\n            init: {\n              height: 500,\n              menubar: false,\n              plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n              toolbar: 'undo redo | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n              content_style: 'body {font-weight: 300; font-size:14px;}'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 34\n        }, this), !edit && currentNoteId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Viewer, {\n            close: closeViewer,\n            loading: loadingNoteBody,\n            rawHtmlBody: currentNoteBody,\n            noteId: currentNoteId,\n            title: currentNoteTitle,\n            bookTitle: currentBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 45\n          }, this)\n        }, void 0, false), !currentNoteId && currentNoteId != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: noteMaker,\n            style: {\n              width: '30%'\n            },\n            alt: \"noteMaker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            text: \"New note\",\n            onClick: () => {\n              setNewNoteWindow(true);\n              setCurrentNoteId(\"\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 0\n        },\n        md: {\n          span: 6\n        },\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          align: \"left\",\n          children: \"Books and collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), !edit && !newNoteWindow && /*#__PURE__*/_jsxDEV(Collapse, {\n          style: {\n            fontWeight: '700',\n            width: '100%',\n            border: '0px',\n            borderLeft: '1px solid silver'\n          },\n          defaultActiveKey: ['0'],\n          onChange: () => {},\n          align: \"left\",\n          children: notes ? Object.keys(notes).length !== 0 ? Object.keys(notes).map((Key, i) => {\n            return notes[Key].find(x => x.deleted !== true) ? /*#__PURE__*/_jsxDEV(Collapse.Panel, {\n              style: {\n                border: `0px solid silver`,\n                borderBottom: '0px'\n              },\n              header: Key,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                align: \"left\",\n                children: notes[Key].map(note => {\n                  return !note.deleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      align: \"left\",\n                      title: note.noteTitle,\n                      style: {\n                        maxWidth: '70%',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis'\n                      },\n                      onClick: () => {\n                        // fetch note and set the variables in state with the returned data\n                        console.log(Key.toString(), note.noteId, note.noteTitle);\n                        setCurrentBook(Key.toString());\n                        setCurrentNoteTitle(note.noteTitle);\n                        setCurrentNoteId(note.noteId);\n                      },\n                      type: \"link\",\n                      children: note.noteTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 33\n                    }, this), \"\\xA0\", currentNoteId === note.noteId && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n                        title: \"edit\",\n                        onClick: () => {\n                          // setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId); setCurrentNoteBody(\"lolpoo\");\n                          setEdit(true);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 72\n                      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                        style: {\n                          fontSize: ''\n                        },\n                        onClick: () => {\n                          setDeleteNoteProcess(true);\n\n                          if (window.confirm(\"Are you sure you want to delete this note?\")) {\n                            axios.put(API_BASE + '/api/notes/deleteNote', {\n                              \"authorId\": localStorage.getItem('bitsjoy_userId'),\n                              \"bookTitle\": currentBook,\n                              \"noteId\": currentNoteId\n                            }, {\n                              headers: {\n                                'Authorization': localStorage.getItem(bearer_token_key),\n                                'Content-Type': 'application/json'\n                              }\n                            }).then(res => {\n                              console.log(res);\n                              setDeleteNoteProcess(false);\n                              window.location.reload(); // setUpdatingNoteProcess(false);\n                            }).catch(err => {\n                              toast.error(err.message); // setUpdatingNoteProcess(false);\n\n                              setDeleteNoteProcess(false);\n                            });\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 37\n                      }, this), \" \", deleteNoteProcess ? /*#__PURE__*/_jsxDEV(SyncOutlined, {\n                        spin: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 37\n                      }, this) : null]\n                    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 34\n                    }, this)]\n                  }, void 0, true) : null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 71\n            }, this) : null;\n          }) : '' : /*#__PURE__*/_jsxDEV(SyncOutlined, {\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }, this), edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabledCondition: currentBook == null || currentNoteTitle == null,\n            styl: {\n              width: '70%'\n            },\n            onClick: updateNote,\n            text: updatingNoteProcess ? 'loading' : 'Update'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: () => {\n              if (window.confirm(\"are you sure? Unsaved changes will be lost\") == true) window.location.reload();\n            },\n            style: {\n              color: btnBackgroundColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(StepBackwardOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 40\n            }, this), \" Back to library\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true), newNoteWindow && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabledCondition: currentBook == null || currentNoteTitle == null,\n            styl: {\n              width: '70%'\n            },\n            onClick: saveNote,\n            text: savingNoteProcess ? 'loading' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: () => {\n              if (window.confirm(\"are you sure? Unsaved changes will be lost\") == true) window.location.reload();\n            },\n            style: {\n              color: btnBackgroundColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(StepBackwardOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 40\n            }, this), \" Back to library\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(NoteMaker, \"icBQCwWund9pFdTexyWQ7qS1Xqc=\");\n\n_c = NoteMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteMaker\");","map":{"version":3,"names":["Col","Row","Collapse","Button","Input","axios","React","useEffect","useRef","useState","Viewer","Editor","ButtonPrimary","BackwardFilled","BackwardOutlined","CloseSquareOutlined","DeleteOutlined","EditOutlined","LoadingOutlined","StepBackwardOutlined","SyncOutlined","API_BASE","bearer_token_key","toast","noteMaker","btnBackgroundColor","NoteMaker","currentNoteId","setCurrentNoteId","currentNoteTitle","setCurrentNoteTitle","currentBook","setCurrentBook","currentNoteBody","setCurrentNoteBody","edit","setEdit","notes","setNotes","newNoteWindow","setNewNoteWindow","loadingNoteBody","setLoadingNoteBody","savingNoteProcess","setSavingNoteProcess","updatingNoteProcess","setUpdatingNoteProcess","deleteNoteProcess","setDeleteNoteProcess","editorRef","post","email","localStorage","getItem","headers","then","res","data","console","log","catch","err","error","message","noteId","idOfAccessor","body","closeViewer","saveNote","current","getContent","date","Date","id","fullName","ppImageLink","window","location","reload","response","updateNote","put","success","span","e","target","value","fontWeight","evt","editor","height","menubar","plugins","toolbar","content_style","trim","paddingTop","width","border","borderLeft","Object","keys","length","map","Key","i","find","x","deleted","borderBottom","note","noteTitle","maxWidth","overflow","textOverflow","toString","fontSize","confirm","color"],"sources":["/Users/neeleshsharma/Desktop/bitsjoy/it-fe/src/pages/noteMaker/index.js"],"sourcesContent":["import { Col, Row, Collapse, Button, Input } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Viewer from './viewer';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport { BackwardFilled, BackwardOutlined, CloseSquareOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, StepBackwardOutlined, SyncOutlined } from '@ant-design/icons';\nimport { API_BASE } from '../../apiConfig';\nimport { bearer_token_key } from './../../localStorageConfig';\nimport { toast } from 'react-toastify';\nimport { noteMaker } from '../../assets';\nimport { btnBackgroundColor } from '../../uiConfig';\n\n\nexport default function NoteMaker() {\n \n   const [ currentNoteId, setCurrentNoteId] = useState(null);\n   const [ currentNoteTitle, setCurrentNoteTitle] = useState(null);\n   const [ currentBook, setCurrentBook] = useState(null);\n   const [ currentNoteBody, setCurrentNoteBody] = useState(\"<p>Type here</p>\");\n\n  const [ edit, setEdit ] = useState(false);\n  const [notes, setNotes ] = useState(null);\n  const [ newNoteWindow, setNewNoteWindow ] = useState(false);\n\n  const [ loadingNoteBody, setLoadingNoteBody ] = useState(false);\n  const [ savingNoteProcess, setSavingNoteProcess ] = useState(false);\n  const [ updatingNoteProcess, setUpdatingNoteProcess ] = useState(false);\n  const [ deleteNoteProcess, setDeleteNoteProcess ] = useState(false);\n\n\n     \nconst editorRef = useRef(null);\n\n  useEffect(()=>{\n    //alert(\"1\");\n    if(notes == null){\n    axios.post(API_BASE + '/api/user/getUserNotes', {\n        email: localStorage.getItem('bitsjoy_email')\n    }, { \n        headers : {\n        'Authorization' : localStorage.getItem(bearer_token_key),\n        'Content-Type': 'application/json'\n    }}).then(res => {\n        setNotes(res.data.notes);\n        console.log(res.data);\n    }).catch((err) => {\n        toast.error(err.message);\n    })\n}\n  }, [])\n\n\n  useEffect(()=>{ \n    if(currentNoteId != null && currentNoteId != \"\"){\n    setLoadingNoteBody(true);\n    console.log(currentNoteId);\n    axios.post(API_BASE + '/api/notes/getNote', {\n        noteId: currentNoteId,\n        idOfAccessor: localStorage.getItem('bitsjoy_userId')\n    },{\n        headers : {\n            'Authorization' : localStorage.getItem(bearer_token_key),\n            'Content-Type': 'application/json'\n        }\n    }).then((res)=>{\n        setCurrentNoteBody(res.data.body)\n    setLoadingNoteBody(false);\n\n      //  alert(res.data.body);\n    }).catch((err)=>{\n        toast.error(err.message);\n    setLoadingNoteBody(false);\n\n    })}\n  }, [currentNoteId])\n\n  const closeViewer = () => {\n    setCurrentNoteId(null);\n  }\n\n\n  const saveNote = () => {\n    console.log(editorRef.current.getContent());\n    setSavingNoteProcess(true);\n    const date = new Date();\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n\n      axios.post(API_BASE + '/api/notes/createNote', { \n        \"dateUpdated\": date,\n        \"dateCreated\": date,\n        \"title\": currentNoteTitle,\n        \"body\": editorRef.current.getContent() == \"\" ? \"<i>No content, edit note to add content</i>\": editorRef.current.getContent(),\n        \"author\": {\n            id: localStorage.getItem('bitsjoy_userId'),\n            fullName: localStorage.getItem('bitsjoy_name'),\n            ppImageLink: localStorage.getItem('bitsjoy_ppImageLink'),\n        },\n        \"accessibleTo\": [localStorage.getItem('bitsjoy_userId')],\n        \"bookTitle\": currentBook, \n      },\n      {\n        headers : {\n            'Authorization' : localStorage.getItem(bearer_token_key),\n            'Content-Type': 'application/json'\n        }\n      }).then((res)=>{\n        console.log(res);\n        window.location.reload();\n    setSavingNoteProcess(false);\n      }).catch(err => {   \n        toast.error(err.response.data.message);\n    setSavingNoteProcess(false);\n\n      })\n    }\n  };\n\n\n  const updateNote = () => {\n    setUpdatingNoteProcess(true);\n    const date = new Date();\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n\n      axios.put(API_BASE + '/api/notes/updateNote', { \n        \"dateUpdated\": date,\n        \"title\": currentNoteTitle,\n        \"noteBody\": editorRef.current.getContent() == \"\" ? \"<i>No content, edit note to add content</i>\": editorRef.current.getContent(),\n        \"authorId\": localStorage.getItem('bitsjoy_userId'),\n        \"accessibleTo\": [localStorage.getItem('bitsjoy_userId')],\n        \"bookTitle\": currentBook,\n        \"noteId\": currentNoteId\n      },\n      {\n        headers : {\n            'Authorization' : localStorage.getItem(bearer_token_key),\n            'Content-Type': 'application/json'\n        }\n      }).then((res)=>{\n        console.log(res);\n        toast.success(\"Note updated\");\n    setUpdatingNoteProcess(false);\n      }).catch(err => {  \n        toast.error(err.data.response.message);\n    setUpdatingNoteProcess(false);\n\n      })\n    }\n  };\n \n\n  return ( \n    <>\n      <Row id=\"lp\" align=\"center\">\n        <Col xs={{span: 0}} md={{span: 18}}>\n            {\n                edit && <div align=\"right\">\n                <Input required type=\"text\" value={currentNoteTitle} onChange={(e)=>{\n                    setCurrentNoteTitle(e.target.value);\n                }} style={{fontWeight: '700'}} />\n                <br/>\n                <br/>\n                <Editor  \n                  onInit={(evt, editor) => editorRef.current = editor}\n                  initialValue={currentNoteBody}\n                  init={{ \n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                      'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                      'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                      'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n                    ],\n                    toolbar: 'undo redo | ' +\n                      'bold italic forecolor | alignleft aligncenter ' +\n                      'alignright alignjustify | bullist numlist outdent indent | ' +\n                      'removeformat | help',\n                    content_style: 'body {font-weight: 300; font-size:14px;}'\n                  }}\n                />  \n              </div> \n            }\n\n\n{\n                newNoteWindow && <div align=\"left\">\n                Book Title: <Input type=\"text\" value={currentBook} onChange={(e)=>{\n                    setCurrentBook(e.target.value.trim() == \"\" ? null : e.target.value);\n                }} style={{fontWeight: '700'}} /> \n                \n                    <br/>\n                <br/>\n                Note Title : <Input type=\"text\" value={currentNoteTitle} onChange={(e)=>{\n                    setCurrentNoteTitle(e.target.value.trim() == \"\" ? null : e.target.value);\n                }} style={{fontWeight: '700'}} />\n                <br/>\n                <br/>\n                <Editor  \n                  onInit={(evt, editor) => editorRef.current = editor}\n                  initialValue={currentNoteBody}\n                  init={{ \n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                      'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                      'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                      'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n                    ],\n                    toolbar: 'undo redo | ' +\n                      'bold italic forecolor | alignleft aligncenter ' +\n                      'alignright alignjustify | bullist numlist outdent indent | ' +\n                      'removeformat | help',\n                    content_style: 'body {font-weight: 300; font-size:14px;}'\n                  }}\n                />  \n              </div> \n            }\n\n            {\n                !edit && currentNoteId && <><Viewer close={closeViewer} loading={loadingNoteBody} rawHtmlBody={currentNoteBody} noteId={currentNoteId} title={currentNoteTitle} bookTitle={currentBook}/></>\n            }\n            {\n                !currentNoteId && currentNoteId != \"\" && <div style={{paddingTop: '50px'}}><img src={noteMaker} style={{width: '30%'}} alt=\"noteMaker\" />\n                <br/>\n                <br/>\n                <br/>\n                <ButtonPrimary text=\"New note\" onClick={()=>{setNewNoteWindow(true); setCurrentNoteId(\"\")}}></ButtonPrimary>\n                </div>\n            }\n             \n        </Col>\n        \n        <Col xs={{span: 0}} md={{span: 6}} align=\"center\">\n            <h3 align=\"left\">Books and collections</h3>\n        {!edit && !newNoteWindow && <Collapse style={{fontWeight: '700', width: '100%',  border: '0px', borderLeft :'1px solid silver',}} defaultActiveKey={['0']} onChange={()=>{}} align=\"left\">\n            {\n                notes ? Object.keys(notes).length !== 0 ? Object.keys(notes).map((Key, i) => {\n                    return notes[Key].find(x => x.deleted !== true) ? <Collapse.Panel style={{border: `0px solid silver`, borderBottom: '0px'}} header={Key} key={i}>\n                        <div align=\"left\">\n                        {\n                            notes[Key].map(note => {\n                                return  !note.deleted ? <> \n                                <Button align=\"left\" title={note.noteTitle} style={{maxWidth: '70%',\n                                overflow: 'hidden', textOverflow: 'ellipsis'}} onClick={()=>{\n                                    // fetch note and set the variables in state with the returned data\n                                  \n                                    console.log(Key.toString(), note.noteId, note.noteTitle);\n                                    setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId);\n                                }} type=\"link\">{note.noteTitle}</Button> \n                                &nbsp;\n                                {\n                                    currentNoteId === note.noteId && <><EditOutlined  title=\"edit\"  onClick={()=>{\n                                        // setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId); setCurrentNoteBody(\"lolpoo\");\n                                        setEdit(true);\n                                    }}/>\n                                &nbsp;\n                                &nbsp;\n\n                                    <DeleteOutlined style={{fontSize:''}} onClick={()=>{\n                                        setDeleteNoteProcess(true);\n                if(window.confirm(\"Are you sure you want to delete this note?\")){\n                    axios.put(API_BASE+ '/api/notes/deleteNote', { \n                        \"authorId\": localStorage.getItem('bitsjoy_userId'), \n                        \"bookTitle\": currentBook,\n                        \"noteId\": currentNoteId\n                      },\n                      {\n                        headers : {\n                            'Authorization' : localStorage.getItem(bearer_token_key),\n                            'Content-Type': 'application/json'\n                        }\n                      }).then((res)=>{\n                        console.log(res);\n                        setDeleteNoteProcess(false);\n                        window.location.reload();\n                   // setUpdatingNoteProcess(false);\n                      }).catch(err => {  \n                        toast.error(err.message);\n                    // setUpdatingNoteProcess(false);\n                    setDeleteNoteProcess(false);\n                \n                      })\n                }\n            }}/> {\n                deleteNoteProcess ? <SyncOutlined spin /> : null\n            }\n                                    </>\n                                 }\n                                 <br/>\n                                {/* <DeleteOutlined style={{position: 'absolute', right: '5px'}}/> */}\n                                </> : null\n                            })\n                        }\n                        </div>\n                    </Collapse.Panel> : null\n                }) : '' : <SyncOutlined spin />\n            }\n    </Collapse>}\n\n    {\n        edit && <><ButtonPrimary disabledCondition={currentBook == null || currentNoteTitle == null} styl={{width: '70%'}} onClick={updateNote} text={updatingNoteProcess ? 'loading' : 'Update'}></ButtonPrimary>\n        <br/>\n<br/>\n<Button type=\"link\" onClick={()=>{ \n   if(window.confirm(\"are you sure? Unsaved changes will be lost\") == true) window.location.reload();\n}} style={{color: btnBackgroundColor}}><StepBackwardOutlined /> Back to library</Button></>\n    }\n\n{\n        newNoteWindow && <><br/><ButtonPrimary disabledCondition={currentBook == null || currentNoteTitle == null} styl={{width: '70%'}} onClick={saveNote} text={savingNoteProcess ? 'loading' : 'Save'}></ButtonPrimary>\n<br/>\n<br/>\n<Button type=\"link\" onClick={()=>{ \n   if(window.confirm(\"are you sure? Unsaved changes will be lost\") == true) window.location.reload();\n}} style={{color: btnBackgroundColor}}><StepBackwardOutlined /> Back to library</Button>\n\n\n</>\n    }\n        </Col>\n      </Row>\n    </> \n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}