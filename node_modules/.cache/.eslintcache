[{"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/index.js":"1","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/App.js":"2","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/localStorageConfig.js":"3","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/Footer.js":"4","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/NavigationBar.js":"5","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/FooterMenu.js":"6","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/noteMaker/index.js":"7","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/home/index.js":"8","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/userAutentication.js/index.js":"9","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/verifyOneTimePayment/index.js":"10","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/profilePage/index.js":"11","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/uiConfig.js":"12","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/apiConfig.js":"13","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/Button.js":"14","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/noteMaker/viewer.js":"15","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/noteMaker/fee.js":"16","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/assets/index.js":"17"},{"size":285,"mtime":1658208215112,"results":"18","hashOfConfig":"19"},{"size":3335,"mtime":1658874303802,"results":"20","hashOfConfig":"19"},{"size":77,"mtime":1658208215113,"results":"21","hashOfConfig":"19"},{"size":1202,"mtime":1658335130811,"results":"22","hashOfConfig":"19"},{"size":1434,"mtime":1658872686095,"results":"23","hashOfConfig":"19"},{"size":618,"mtime":1658656092758,"results":"24","hashOfConfig":"19"},{"size":35030,"mtime":1658872314065,"results":"25","hashOfConfig":"19"},{"size":3265,"mtime":1658864760084,"results":"26","hashOfConfig":"19"},{"size":9709,"mtime":1658875954266,"results":"27","hashOfConfig":"19"},{"size":2178,"mtime":1658691651433,"results":"28","hashOfConfig":"19"},{"size":873,"mtime":1658208215117,"results":"29","hashOfConfig":"19"},{"size":120,"mtime":1658876048987,"results":"30","hashOfConfig":"19"},{"size":129,"mtime":1658767483808,"results":"31","hashOfConfig":"19"},{"size":536,"mtime":1658653331186,"results":"32","hashOfConfig":"19"},{"size":1226,"mtime":1658608766017,"results":"33","hashOfConfig":"19"},{"size":4838,"mtime":1658740564745,"results":"34","hashOfConfig":"19"},{"size":293,"mtime":1658875715481,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16l2e69",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/index.js",[],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/App.js",["96"],[],"import './App.css';\nimport NavigationBar from './components/NavigationBar';\nimport UserAuthentication from './pages/userAutentication.js';\nimport { HashRouter as Router,\nRoutes,\nRoute\n} from 'react-router-dom';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport MainForm from './pages/home';\nimport { bearer_token_key } from './localStorageConfig'; \nimport Profile from './pages/profilePage';\nimport NoteMaker from './pages/noteMaker';\nimport VerifyOneTime from './pages/verifyOneTimePayment';\nimport { useEffect, useState } from 'react';\nimport { AndroidOutlined, AppleOutlined, WindowsOutlined } from '@ant-design/icons';\n\nlet deferredPrompt;  \n    \nfunction App() {\n  const [installable, setInstallable] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"beforeinstallprompt\", (e) => {\n      // Prevent the mini-infobar from appearing on mobile\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      deferredPrompt = e;\n      // Update UI notify the user they can install the PWA\n      setInstallable(true);\n    });\n\n    window.addEventListener('appinstalled', () => {\n      // Log install to analytics\n      console.log('INSTALL: Success');\n    });\n  }, []);\n\n  const handleInstallClick = (e) => {\n      // Hide the app provided install promotion\n      setInstallable(false);\n      // Show the install prompt\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then((choiceResult) => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n      });\n  };\n  \n \n  return (\n    <div className=\"App\">\n\n{true &&\n<div align=\"center\" style={{position: 'fixed', bottom: '0px', right: '0px', zIndex: '999'}}>\n          <button style={{ fontWeight: '500', padding: '10px 30px', border: '1px solid  #01875f', backgroundColor: '#01875f', color: 'white'}} onClick={handleInstallClick}>\n            Install app &nbsp; <AndroidOutlined /> <AppleOutlined /> <WindowsOutlined /> \n          </button>\n          </div>\n        }\n      \n      <Router>\n      <ToastContainer\n      position=\"bottom-right\" />\n      <NavigationBar /> \n      <br/>\n      <br/>\n      <br/>\n      <br/>\n        <Routes> \n          <Route path='/' exact element={localStorage.getItem(bearer_token_key) === null ? <UserAuthentication/> : <MainForm/>}></Route>\n          <Route path='/profile' element={localStorage.getItem(bearer_token_key) === null ? <UserAuthentication/> : <Profile />}></Route>\n          <Route path='/notes' element={localStorage.getItem(bearer_token_key) === null ? <UserAuthentication/> : <NoteMaker />}></Route>\n          <Route path='/editorview' element={localStorage.getItem(bearer_token_key) === null ? <UserAuthentication/> : <NoteMaker />}></Route>\n          {/* <Route path='/onboarding' element={localStorage.getItem(bearer_token_key) === null ? <UserAuthentication/> : <OnBoarding/>}></Route> */}\n          <Route path='/verifyonetimepayment/:x' element={localStorage.getItem(bearer_token_key) === null ? <UserAuthentication/> : <VerifyOneTime />}></Route>\n\n        </Routes> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/localStorageConfig.js",[],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/Footer.js",["97","98","99","100"],[],"import { FacebookOutlined, InstagramOutlined, LinkedinOutlined } from '@ant-design/icons'\nimport { Col, Row } from 'antd'\nimport React from 'react'\nimport { toast } from 'react-toastify'\nimport { btnBackgroundColor } from '../uiConfig'\n\nexport default function Footer() {\n  return (\n    <div style={{position: 'fixed', bottom: '0px'}}>\n        <Row style={{backgroundColor: btnBackgroundColor, color: 'white', width: '100vw', marginLeft: '-20px', padding: '20px'}}>\n            <Col xs={{span: 12}} md={{span: 12}} align=\"left\">\n                Contact us :  \n                support@bitsjoy.com \n            </Col>\n\n            <Col xs={{span: 12}} md={{span: 12}} align=\"right\"> \n                {/* <LinkedinOutlined style={{fontSize: '20px'}} onClick={()=>{\n                    toast.success('coming soon!');\n                }} /> &nbsp;\n                <FacebookOutlined onClick={()=>{\n                    toast.success('coming soon!');\n                }} style={{fontSize: '20px'}}/> &nbsp; \n                <InstagramOutlined onClick={()=>{\n                    toast.success('coming soon!');\n                }} style={{fontSize: '20px'}}/> */}\n            </Col>\n        </Row>\n    </div>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/NavigationBar.js",["101","102"],[]," \nimport { AppstoreOutlined, HomeOutlined } from '@ant-design/icons'\nimport { Col, Dropdown, Row } from 'antd'\nimport React from 'react'\nimport { Link } from 'react-router-dom' \nimport { btnBackgroundColor } from '../uiConfig'\n\nexport default function NavigationBar() {\n  return (\n    <>\n        <Row style={{paddingTop: '13px', paddingBottom: '5px',  paddingLeft: '0px', position: 'fixed', width: '100vw', backgroundColor: 'white', zIndex: '9', left: '0px', color: 'white', fontFamily: 'raleway'}}> \n            <Col span={12} align=\"left\">\n            <Link title=\"Profile page\" to=\"/\"><AppstoreOutlined style={{color: btnBackgroundColor, fontSize: '30px', paddingLeft: '20px'}}/><span style={{color: btnBackgroundColor}}>Bitsjoy</span> </Link>\n                {/* <sub> &nbsp;bitsjoy </sub> */}\n            </Col>\n            <Col span={12} align=\"right\">\n            {localStorage.getItem(\"bitsjoy_pp_image\") && <Link title=\"Profile page\" to=\"/profile\"> <img src={localStorage.getItem(\"bitsjoy_pp_image\")} style={{width: '40px', borderRadius: '50%', marginRight: '20px', border: '2px solid goldenrod'}} alt=\"PP\" /> </Link>}\n                {/* <AimOutlined onClick={()=>{\n                    localStorage.clear();\n                    window.location.reload();\n                }} style={{fontSize: '20px', marginRight: '30px', marginTop: '10px', transform: 'rotate(90deg)'}} /> */}\n            </Col>\n        </Row> \n    </>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/FooterMenu.js",["103"],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/noteMaker/index.js",["104","105","106","107","108","109","110","111","112","113","114"],[],"import { Col, Row, Collapse, Button, Input, Modal } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Viewer from './viewer';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ButtonPrimary from '../../components/Button';\nimport {  DeleteOutlined, EditOutlined, LoadingOutlined, PlusCircleOutlined, ShareAltOutlined, StepBackwardOutlined, SyncOutlined } from '@ant-design/icons';\nimport { API_BASE } from '../../apiConfig';\nimport { bearer_token_key } from './../../localStorageConfig';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { noteMaker } from '../../assets';\nimport { btnBackgroundColor } from '../../uiConfig';\nimport Fee from './fee';\n\n\nexport default function NoteMaker() { \n \n  let noteHTMLCharacterLimit = 1000000;\n\n  const [currentBookEditable, setCurrentBookEditable ] = useState(true);\n\n  const [ sharing, setSharing ] = useState(false);\n  const [share, setShare ] = useState(false); \n  const [shareWithEmail, setShareWithEmail ] = useState(\"\");\n \n  const [ currentNoteId, setCurrentNoteId] = useState(null);\n  const [ currentNoteTitle, setCurrentNoteTitle] = useState(null);\n  const [ currentBook, setCurrentBook] = useState(null);\n  const [ currentNoteBody, setCurrentNoteBody] = useState(\"<p>No content, edit note to add content</p>\");\n\n  const [ edit, setEdit ] = useState(false);\n  const [notes, setNotes ] = useState(null);\n  const [ newNoteWindow, setNewNoteWindow ] = useState(false);\n\n  const [ loadingNoteBody, setLoadingNoteBody ] = useState(false);\n  const [ savingNoteProcess, setSavingNoteProcess ] = useState(false);\n  const [ updatingNoteProcess, setUpdatingNoteProcess ] = useState(false);\n  const [ deleteNoteProcess, setDeleteNoteProcess ] = useState(false);\n  const [ editorLoaded, setEditorLoaded ] = useState(false);\n\n  const [ userHasAccess, setUserHasAccess ] = useState(null);\n\n  const editorRef = useRef(null);\n\n  \n\n  useEffect(() => { \n    const script = document.createElement('script');\n    \n    script.src = \"https://checkout.razorpay.com/v1/payment-button.js\";\n    script.async = true;\n    script.setAttribute('data-payment_button_id' , \"pl_JxBuBqoSa0PGbf\");\n \n\n    if(document.getElementById('rz_form')) document.getElementById('rz_form').appendChild(script); \n\n\n    return () => { \n\n    }\n  }, [userHasAccess]);\n\n  \n     \n\n  useEffect(() => {\n    axios.post(API_BASE + '/api/user/getUserOwnedProducts', {\n      email: localStorage.getItem('bitsjoy_email'),\n      // paymentId: \"pay_JxGlP9laUhy2wW\",\n      // product: \"Notes\"\n  },{ \n    headers : {\n    'Authorization' : localStorage.getItem(bearer_token_key),\n    'Content-Type': 'application/json'\n}}).then(res => {\n  console.log(res);\n      if(res.data.ownedProducts.includes(\"Notes\")){\n        setUserHasAccess(true);\n // window.location.reload();\n\n      } else {\n        setUserHasAccess(false);\n      }\n}).catch((err) => {\n  toast.error(err.response.data.message);\n})\n  }, [])\n\n  \n\n  useEffect(()=>{\n    //alert(\"1\");\n    if(notes == null){\n    axios.post(API_BASE + '/api/user/getUserNotes', {\n        email: localStorage.getItem('bitsjoy_email')\n    }, { \n        headers : {\n        'Authorization' : localStorage.getItem(bearer_token_key),\n        'Content-Type': 'application/json'\n    }}).then(res => {\n        \n        setNotes(Object.keys(res.data.notes)\n        .sort()\n        .reduce((accumulator, key) => {\n          accumulator[key] = res.data.notes[key];\n      \n          return accumulator;\n        }, {}));\n        console.log(res.data);\n    }).catch((err) => {\n        toast.error(err.message);\n    })\n}\n  }, [])\n\n\n  useEffect(()=>{ \n    if(currentNoteId != null && currentNoteId != \"\"){\n    setLoadingNoteBody(true);\n    console.log(currentNoteId);\n    axios.post(API_BASE + '/api/notes/getNote', {\n        noteId: currentNoteId,\n        idOfAccessor: localStorage.getItem('bitsjoy_userId')\n    },{\n        headers : {\n            'Authorization' : localStorage.getItem(bearer_token_key),\n            'Content-Type': 'application/json'\n        }\n    }).then((res)=>{\n      console.log(res.data);\n        setCurrentNoteBody(res.data.body);\n    setLoadingNoteBody(false);\n\n      //  alert(res.data.body);\n    }).catch((err)=>{\n    toast.error(err.response.data.message);\n    setLoadingNoteBody(false);\n\n    })}\n  }, [currentNoteId])\n\n  const closeViewer = () => {\n    setCurrentNoteId(null);\n  }\n\n\n  const saveNote = () => {\n    // console.log(editorRef.current.getContent().length);\n    if(editorRef.current.getContent().length > noteHTMLCharacterLimit){\n      toast.error(\"Reduce content of the file\");\n      document.getElementById('word_limit_reached').style.display = 'block';\n\n    } else {\n\n    if(currentBook == null || currentNoteTitle == null){\n      toast.error(\"collection-name and note-title are empty\");\n    } else {\n    console.log(editorRef.current.getContent());\n    setSavingNoteProcess(true);\n    const date = new Date();\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n\n      axios.post(API_BASE + '/api/notes/createNote', { \n        \"dateUpdated\": date,\n        \"dateCreated\": date,\n        \"title\": currentNoteTitle,\n        \"body\": editorRef.current.getContent() == \"\" ? \"<i>No content, edit note to add content</i>\": editorRef.current.getContent(),\n        \"author\": {\n            id: localStorage.getItem('bitsjoy_userId'),\n            fullName: localStorage.getItem('bitsjoy_name'),\n            ppImageLink: localStorage.getItem('bitsjoy_ppImageLink'),\n        },\n        \"accessibleTo\": [localStorage.getItem('bitsjoy_userId')],\n        \"bookTitle\": currentBook, \n      },\n      {\n        headers : {\n            'Authorization' : localStorage.getItem(bearer_token_key),\n            'Content-Type': 'application/json'\n        }\n      }).then((res)=>{\n        console.log(res);\n        toast.success('Collection updated')\n       // window.location.reload(); // also resets the state variables\n    setSavingNoteProcess(false);\n      }).catch(err => {   \n        toast.error(err.response.data.message);\n    setSavingNoteProcess(false);\n\n      })\n    }\n  }\n}\n  };\n\n\n  const updateNote = () => {\n     console.log(editorRef.current.getContent().length);\n\n    if(editorRef.current.getContent().length > noteHTMLCharacterLimit){\n      toast.error(\"Reduce content of the file\");\n      document.getElementById('word_limit_reached').style.display = 'block';\n\n    } else {\n    if(currentBook == null || currentNoteTitle == null){\n      alert(\"Note-title is empty\");\n    } else {\n    setUpdatingNoteProcess(true);\n    const date = new Date();\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n\n      axios.put(API_BASE + '/api/notes/updateNote', { \n        \"dateUpdated\": date,\n        \"title\": currentNoteTitle,\n        \"noteBody\": editorRef.current.getContent() == \"\" ? \"<i>No content, edit note to add content</i>\": editorRef.current.getContent(),\n        \"authorId\": localStorage.getItem('bitsjoy_userId'),\n        \"accessibleTo\": [localStorage.getItem('bitsjoy_userId')],\n        \"bookTitle\": currentBook,\n        \"noteId\": currentNoteId\n      },\n      {\n        headers : {\n            'Authorization' : localStorage.getItem(bearer_token_key),\n            'Content-Type': 'application/json'\n        }\n      }).then((res)=>{\n        console.log(res);\n        toast.success(\"Note updated\");\n    setUpdatingNoteProcess(false);\n      }).catch(err => {  \n        toast.error(err.data.response.message);\n    setUpdatingNoteProcess(false);\n\n      })\n    }\n  }}\n  };\n \n\n  return ( \n    <>\n     <Row>\n          <Col span={24}>\n            <h3 id=\"word_limit_reached\" style={{display: 'none', backgroundColor: '#FF9494', color: 'white'}}>Word limit reached</h3>\n          </Col>\n        </Row>\n    {\n      userHasAccess === true ?  \n      <Row id=\"lp\" align=\"center\">\n       \n        <Col xs={{span: 24}} md={{span: 18}}>\n            {\n                edit && <div align=\"left\">\n                {currentBookEditable && <> Collection Name: <Input id=\"collectionName\" type=\"text\" value={currentBook} onChange={(e)=>{\n                   \n                   let val = e.target.value.toString().toLowerCase().replace(/\\b(\\w)/g, x => x.toUpperCase());\n                   setCurrentBook(val.trim() == \"\" ? null : val);\n               }} style={{fontWeight: '700', textTransform: 'capitalize'}} />    <br/>\n               <br/></> }\n             \n               {!currentBookEditable && <span style={{borderBottom: `1px solid ${btnBackgroundColor}`}}> {currentBook}    <br/>\n              <br/></span> }\n                    Note Title:\n                <Input required type=\"text\" value={currentNoteTitle} onChange={(e)=>{\n                    setCurrentNoteTitle(e.target.value.trim() == \"\" ? null : e.target.value);\n               }} style={{fontWeight: '700'}} />\n                <br/> \n                <ShareAltOutlined onClick={()=>{setShare(true)}} style={{fontSize: '22px'}} />\n                <br/> \n                <br/> \n                { !editorLoaded && <><SyncOutlined spin />&nbsp; &nbsp; Loading editor ...<br/><br/></>}\n                <Editor  \n                  onInit={(evt, editor) => editorRef.current = editor}\n                  initialValue={currentNoteBody}\n                  onChange={(e)=>{\n                    console.log(noteHTMLCharacterLimit);\n                    if(editorRef.current.getContent().length > noteHTMLCharacterLimit){\n                      document.getElementById('word_limit_reached').style.display = 'block';\n                    } else {\n                      document.getElementById('word_limit_reached').style.display = 'none';\n                    }\n                  }}\n                  onLoadContent={()=>{\n                   // alert(\"FAFAFAF\");\n                    setEditorLoaded(true);\n                  }} \n                  init={{  \n                    init_instance_callback: function (editor) {\n                      document.querySelector('.tox-statusbar__wordcount').click();\n                   },\n                    selector: 'textarea#full-featured',\n                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker imagetools textpattern noneditable help formatpainter permanentpen pageembed charmap tinycomments mentions quickbars linkchecker emoticons advtable export',\n                  \n                    tinydrive_max_image_dimension: 100,\n                    mobile: {\n                      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter pageembed charmap mentions quickbars linkchecker emoticons advtable'\n                    },\n                    menu: {\n                      tc: {\n                        title: 'Comments',\n                        items: 'addcomment showcomments deleteallconversations'\n                      }\n                    }, \n                    menubar: false,\n                    toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | a11ycheck ltr rtl | showcomments addcomment',\n                    autosave_ask_before_unload: true,  \n                    autosave_restore_when_empty: false,\n                    autosave_retention: '2m',\n                     \n                    image_advtab: false, \n                    importcss_append: true,\n                    templates: [\n                          { title: 'New Table', description: 'creates a new table', content: '<div class=\"mceTmpl\"><table width=\"98%%\"  border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><tr><th scope=\"col\"> </th><th scope=\"col\"> </th></tr><tr><td> </td><td> </td></tr></table></div>' },\n                      { title: 'Starting my story', description: 'A cure for writers block', content: 'Once upon a time...' },\n                      { title: 'New list with dates', description: 'New List with dates', content: '<div class=\"mceTmpl\"><span class=\"cdate\">cdate</span><br /><span class=\"mdate\">mdate</span><h2>My List</h2><ul><li></li><li></li></ul></div>' }\n                    ],\n                    height: 500,\n                    template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',\n                    template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]', \n                    image_caption: true,\n                    quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',\n                    noneditable_noneditable_class: 'mceNonEditable',\n                    toolbar_mode: 'sliding',\n                    spellchecker_ignore_list: ['Ephox', 'Moxiecode'],\n                    tinycomments_mode: 'embedded',\n                    content_style: 'body {font-weight: 300; font-size:14px;}',\n                    contextmenu: 'link image imagetools table configurepermanentpen',\n                    a11y_advanced_options: true, \n                    /*\n                    The following settings require more configuration than shown here.\n                    For information on configuring the mentions plugin, see:\n                    https://www.tiny.cloud/docs/plugins/premium/mentions/.\n                    */ \n                    mentions_item_type: 'profile'\n                  \n                  }}\n                />  \n              </div>\n            }\n\n\n            {\n                newNoteWindow && <div align=\"left\">\n                {currentBookEditable && <> Collection Name: <Input id=\"collectionName\" type=\"text\" value={currentBook} onChange={(e)=>{\n                   \n                    let val = e.target.value.toString().toLowerCase().replace(/\\b(\\w)/g, x => x.toUpperCase());\n                    setCurrentBook(val.trim() == \"\" ? null : val);\n                }} style={{fontWeight: '700', textTransform: 'capitalize'}} />    <br/>\n                <br/></> }\n              \n                {!currentBookEditable && <span style={{borderBottom: `1px solid ${btnBackgroundColor}`}}> Adding note to {currentBook}    <br/>\n               <br/></span> }\n                \n                Note Title : <Input type=\"text\" value={currentNoteTitle} onChange={(e)=>{\n                    let val = e.target.value.toString().toLowerCase().replace(/\\b(\\w)/g, x => x.toUpperCase());\n                    setCurrentNoteTitle(val.trim() == \"\" ? null : val);\n                }} style={{fontWeight: '700', textTransform: 'capitalize'}} />\n                <br/>\n                <br/>\n                { !editorLoaded && <><SyncOutlined spin />&nbsp; &nbsp; Loading editor ...<br/><br/></>}\n                <Editor  \n                  onInit={(evt, editor) => editorRef.current = editor}\n                  initialValue={currentNoteBody}\n                  onChange={(e)=>{\n                    console.log(noteHTMLCharacterLimit);\n                    if(editorRef.current.getContent().length > noteHTMLCharacterLimit){\n                      document.getElementById('word_limit_reached').style.display = 'block';\n                    } else {\n                      document.getElementById('word_limit_reached').style.display = 'none';\n                    }\n                  }}\n                  onLoadContent={()=>{\n                    // alert(\"FAFAFAF\");\n                     setEditorLoaded(true);\n                   }}\n                   init={{ \n                    init_instance_callback: function (editor) {\n                      document.querySelector('.tox-statusbar__wordcount').click();   \n                   },\n                    selector: 'textarea#full-featured',\n                    plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker imagetools textpattern noneditable help formatpainter permanentpen pageembed charmap tinycomments mentions quickbars linkchecker emoticons advtable export',\n                    tinydrive_token_provider: 'URL_TO_YOUR_TOKEN_PROVIDER',\n                    tinydrive_dropbox_app_key: 'YOUR_DROPBOX_APP_KEY',\n                    tinydrive_google_drive_key: 'YOUR_GOOGLE_DRIVE_KEY',\n                    tinydrive_google_drive_client_id: 'YOUR_GOOGLE_DRIVE_CLIENT_ID',\n                    tinydrive_max_image_dimension: 100,\n\n                    mobile: {\n                      plugins: 'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter pageembed charmap mentions quickbars linkchecker emoticons advtable'\n                    },\n                    menu: {\n                      tc: {\n                        title: 'Comments',\n                        items: 'addcomment showcomments deleteallconversations'\n                      }\n                    }, \n                    height: 500,\n\n                    menubar: false,\n                    toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | a11ycheck ltr rtl | showcomments addcomment',\n                    autosave_ask_before_unload: true,  \n                    autosave_restore_when_empty: false,\n                    autosave_retention: '2m',\n                    image_advtab: true,  \n                    importcss_append: true,\n                    templates: [\n                          { title: 'New Table', description: 'creates a new table', content: '<div class=\"mceTmpl\"><table width=\"98%%\"  border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><tr><th scope=\"col\"> </th><th scope=\"col\"> </th></tr><tr><td> </td><td> </td></tr></table></div>' },\n                      { title: 'Starting my story', description: 'A cure for writers block', content: 'Once upon a time...' },\n                      { title: 'New list with dates', description: 'New List with dates', content: '<div class=\"mceTmpl\"><span class=\"cdate\">cdate</span><br /><span class=\"mdate\">mdate</span><h2>My List</h2><ul><li></li><li></li></ul></div>' }\n                    ],\n                    template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',\n                    template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]', \n                    image_caption: true,\n                    quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',\n                    noneditable_noneditable_class: 'mceNonEditable',\n                    toolbar_mode: 'sliding',\n                    spellchecker_ignore_list: ['Ephox', 'Moxiecode'],\n                    tinycomments_mode: 'embedded',\n                    content_style: 'body {font-weight: 300; font-size:14px;}',\n                    contextmenu: 'link image imagetools table configurepermanentpen',\n                    a11y_advanced_options: true, \n                    /*\n                    The following settings require more configuration than shown here.\n                    For information on configuring the mentions plugin, see:\n                    https://www.tiny.cloud/docs/plugins/premium/mentions/.\n                    */ \n                    mentions_item_type: 'profile',\n                  }}\n                />  \n              </div> \n            }\n\n            {\n                !edit && currentNoteId && <><Viewer close={closeViewer} loading={loadingNoteBody} rawHtmlBody={currentNoteBody} noteId={currentNoteId} title={currentNoteTitle} bookTitle={currentBook}/></>\n            }\n            {\n                !currentNoteId && currentNoteId != \"\" && <div align=\"center\" style={{paddingTop: '20px'}}><img id=\"notes-hero\" src={noteMaker} style={{width: '40%', border: '0px solid black'}} alt=\"noteMaker\" />\n                <br/>\n                <br/>\n                <br/>  \n                <ButtonPrimary styl={{fontSize: '15px'}} id=\"new-collection\" text={<span> <PlusCircleOutlined /> New collection </span>} onClick={(e)=>{ \n                  document.getElementById(\"new-collection\").style.transform = 'translate(1000px, 0px)';\n                  document.getElementById(\"notes-hero\").style.transform = 'translate(0px, -1000px)';\n                  setTimeout(()=>{\n                    setCurrentBook(null); setNewNoteWindow(true); setCurrentNoteId(\"\"); setCurrentNoteTitle('Sample note title'); setCurrentNoteBody(\"<p>This is the first note of this collection, you can delete it later\"); \n\n                  }, 500);\n    }}></ButtonPrimary> \n                <br/>\n                <br/>\n                <br/>\n                <br/> \n                </div>\n            }\n             \n        </Col>\n\n\n\n\n\n\n\n\n\n\n        \n        <Col style={{overflowY: 'auto', height: '75vh'}} xs={{span: 0}} md={{span: 6}} align=\"center\">\n            \n        {!edit && !newNoteWindow && <div align=\"left\"><h3 style={{color: btnBackgroundColor}} align=\"left\">{Object.keys(notes? notes : {}).length !== 0 ? \"Collections\" : \"Collections will be shown here\"}</h3> \n        \n        <br/> \n        <Collapse style={{fontWeight: '700', width: 'auto',  border: '0px', display: 'inline'}} defaultActiveKey={['0']} onChange={()=>{}} align=\"left\">\n            {\n                notes ? Object.keys(notes).length !== 0 ? Object.keys(notes).map((Key, i) => {\n                    return notes[Key].find(x => x.deleted !== true) ? <Collapse.Panel style={{border: `0px solid silver`, borderBottom: '0px'}} header={Key} key={i}>\n                        <div align=\"left\">\n        <Button type=\"link\" style={{border: `0px solid ${btnBackgroundColor}`, color: 'black'}} onClick={()=>{setNewNoteWindow(true); setCurrentNoteId(\"\"); setCurrentBook(Key); setCurrentNoteTitle('type here'); setCurrentBookEditable(false);}}><span> \n            <span onMouseOver={()=>{\n           // document.getElementById('addMoreNotes').style.display = 'inline';\n        }}\n        onMouseOut={()=>{\n           // document.getElementById('addMoreNotes').style.display = 'none';\n        }}\n        ><PlusCircleOutlined /> Add more</span> &nbsp; </span></Button>\n<br/> \n                        {\n                            notes[Key].map(note => {\n                                return    <> \n                                <Button align=\"left\" title={note.noteTitle} style={{maxWidth: '70%', color: btnBackgroundColor,\n                                overflow: 'hidden', textOverflow: 'ellipsis'}} onClick={()=>{\n                                    // fetch note and set the variables in state with the returned data\n                                  \n                                    console.log(Key.toString(), note.noteId, note.noteTitle);\n                                    setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId);\n                                }} type=\"link\">{note.noteTitle}</Button> \n                                &nbsp;\n                                {\n                                    currentNoteId === note.noteId && <><EditOutlined  title=\"edit\"  onClick={()=>{\n                                        // setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId); setCurrentNoteBody(\"lolpoo\");\n                                        setEdit(true);\n                                        setCurrentBookEditable(false);\n                                    }}/>\n                                &nbsp;\n                                &nbsp;\n\n                                    <DeleteOutlined title=\"delete\" style={{fontSize:''}} onClick={()=>{\n                                        setDeleteNoteProcess(true);\n                if(window.confirm(\"Are you sure you want to delete this note?\")){\n                    axios.put(API_BASE+ '/api/notes/deleteNote', { \n                        \"authorId\": localStorage.getItem('bitsjoy_userId'), \n                        \"bookTitle\": currentBook,\n                        \"noteId\": currentNoteId\n                      },\n                      {\n                        headers : {\n                            'Authorization' : localStorage.getItem(bearer_token_key),\n                            'Content-Type': 'application/json'\n                        }\n                      }).then((res)=>{\n                        console.log(res);\n                        setDeleteNoteProcess(false);\n                        window.location.reload();\n                   // setUpdatingNoteProcess(false);\n                      }).catch(err => {  \n                        toast.error(err.message);\n                    // setUpdatingNoteProcess(false);\n                    setDeleteNoteProcess(false);\n                \n                      })\n                }\n            }}/> {\n                deleteNoteProcess ? <SyncOutlined spin /> : null\n            }\n                                    </>\n                                 }\n                                 <br/>\n                                {/* <DeleteOutlined style={{position: 'absolute', right: '5px'}}/> */}\n                                </> \n                            })\n                        }\n\n\n                        </div>\n                    </Collapse.Panel> : null\n                }) : \"\" : <SyncOutlined spin />\n            }\n    </Collapse></div>}\n\n    {\n        edit && <><br/><ButtonPrimary disabledCondition={currentBook == null || currentNoteTitle == null} styl={{width: '70%'}} onClick={updateNote} text={updatingNoteProcess ? 'loading' : 'Update'}></ButtonPrimary>\n        <br/>\n<br/>\n<Button type=\"link\" onClick={()=>{ \n  window.scrollTo(0,0);\n     window.location.reload();\n}} style={{color: btnBackgroundColor}}><StepBackwardOutlined /> Back to library</Button></>\n    }\n\n{\n        newNoteWindow && <><br/><ButtonPrimary disabledCondition={currentBook == null || currentNoteTitle == null} styl={{width: '70%'}} onClick={saveNote} text={savingNoteProcess ? 'loading' : 'Save'}></ButtonPrimary>\n<br/>\n<br/>\n<Button type=\"link\" onClick={()=>{ \n  window.scrollTo(0,0);\n\n  window.location.reload();\n}} style={{color: btnBackgroundColor}}><StepBackwardOutlined /> Back to library</Button>\n\n\n</>\n    }\n        </Col>\n\n\n\n\n\n\n\n\n\n\n        <Col style={{overflowY: 'auto', height: '75vh'}} xs={{span: 24}} md={{span: 0}} align=\"left\">\n        {!edit && !newNoteWindow && <div align=\"left\"><h3 style={{color: btnBackgroundColor}} align=\"left\">{Object.keys(notes? notes : {}).length !== 0 ? \"Collections\" : \"Collections will be shown here\"}</h3> \n        \n        <br/> \n        <Collapse style={{fontWeight: '700', width: 'auto',  border: '0px', display: 'inline'}} defaultActiveKey={['0']} onChange={()=>{}} align=\"left\">\n            {\n                notes ? Object.keys(notes).length !== 0 ? Object.keys(notes).map((Key, i) => {\n                    return notes[Key].find(x => x.deleted !== true) ? <Collapse.Panel style={{border: `0px solid silver`, borderBottom: '0px'}} header={Key} key={i}>\n                        <div align=\"left\">\n        <Button type=\"link\" style={{border: `0px solid ${btnBackgroundColor}`, color: 'black'}} onClick={()=>{setNewNoteWindow(true); setCurrentNoteId(\"\"); setCurrentBook(Key); setCurrentNoteTitle('type here'); setCurrentBookEditable(false);}}><span> \n            <span onMouseOver={()=>{\n           // document.getElementById('addMoreNotes').style.display = 'inline';\n        }}\n        onMouseOut={()=>{\n           // document.getElementById('addMoreNotes').style.display = 'none';\n        }}\n        ><PlusCircleOutlined /> Add more</span> &nbsp; </span></Button>\n<br/> \n                        {\n                            notes[Key].map(note => {\n                                return    <> \n                                <Button align=\"left\" title={note.noteTitle} style={{maxWidth: '70%', color: btnBackgroundColor,\n                                overflow: 'hidden', textOverflow: 'ellipsis'}} onClick={()=>{\n                                    // fetch note and set the variables in state with the returned data\n                                  \n                                    console.log(Key.toString(), note.noteId, note.noteTitle);\n                                    setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId);\n                                }} type=\"link\">{note.noteTitle}</Button> \n                                &nbsp;\n                                {\n                                    currentNoteId === note.noteId && <><EditOutlined  title=\"edit\"  onClick={()=>{\n                                        // setCurrentBook(Key.toString()); setCurrentNoteTitle(note.noteTitle); setCurrentNoteId(note.noteId); setCurrentNoteBody(\"lolpoo\");\n                                        setEdit(true);\n                                    }}/>\n                                &nbsp;\n                                &nbsp;\n\n                                    <DeleteOutlined title=\"delete\" style={{fontSize:''}} onClick={()=>{\n                                        setDeleteNoteProcess(true);\n                if(window.confirm(\"Are you sure you want to delete this note?\")){\n                    axios.put(API_BASE+ '/api/notes/deleteNote', { \n                        \"authorId\": localStorage.getItem('bitsjoy_userId'), \n                        \"bookTitle\": currentBook,\n                        \"noteId\": currentNoteId\n                      },\n                      {\n                        headers : {\n                            'Authorization' : localStorage.getItem(bearer_token_key),\n                            'Content-Type': 'application/json'\n                        }\n                      }).then((res)=>{\n                        console.log(res);\n                        setDeleteNoteProcess(false);\n                        window.location.reload();\n                   // setUpdatingNoteProcess(false);\n                      }).catch(err => {  \n                        toast.error(err.message);\n                    // setUpdatingNoteProcess(false);\n                    setDeleteNoteProcess(false);\n                \n                      })\n                }\n            }}/> {\n                deleteNoteProcess ? <SyncOutlined spin /> : null\n            }\n                                    </>\n                                 }\n                                 <br/>\n                                {/* <DeleteOutlined style={{position: 'absolute', right: '5px'}}/> */}\n                                </> \n                            })\n                        }\n\n\n                        </div>\n                    </Collapse.Panel> : null\n                }) : \"\" : <SyncOutlined spin />\n            }\n    </Collapse></div>}\n\n\n          </Col>\n\n\n\n\n\n\n<Row>\n        <Col xs={{span: 24}} md={{span: 0}} align=\"center\">\n            <div style={{position: 'fixed', bottom: '10px', right: '20px'}}>\n            {\n        edit && <><ButtonPrimary styl={{width: '100%'}} onClick={updateNote} text={updatingNoteProcess ? 'loading' : 'Update'}></ButtonPrimary>\n        \n</>\n    }\n\n{\n        newNoteWindow && <>\n        \n        <ButtonPrimary style={{display: 'inline'}}  styl={{width: '100%'}} onClick={saveNote} text={savingNoteProcess ? 'loading' : 'Save'}></ButtonPrimary>\n\n\n\n\n</>\n    }\n            </div>\n\n            <div style={{position: 'fixed', bottom: '10px', left: '20px'}}>\n\n{ edit &&  <Button type=\"link\" onClick={()=>{ \n  window.scrollTo(0,0);\n     window.location.reload();\n}} style={{color: btnBackgroundColor}}><StepBackwardOutlined /> Close</Button>}\n\n\n\n           \n\n            {\n        newNoteWindow && <>\n        <Button type=\"link\" onClick={()=>{ \n  window.scrollTo(0,0);\n\n  window.location.reload();\n}} style={{color: btnBackgroundColor, padding: '0px'}}><StepBackwardOutlined /> Close</Button>\n   \n\n\n</>\n    }\n            </div>\n</Col>\n</Row>\n      </Row>\n      : userHasAccess === false ? \n      <div>\n        <Fee />\n      </div> : <span style={{width: '100%', position: 'relative', top: '37vh'}}><SyncOutlined spin style={{fontSize: '25px'}} /></span>\n  }\n\n<Modal title=\"Share with\" visible={share} onOk={()=>{}} onCancel={()=>{setShare(false)}}\n\nfooter={[\n  <Button key=\"back\" onClick={() => {setShare(false);}}>\n    Cancel\n  </Button>,\n   \n]}>\n\n       Enter Email :\n       <Input value={shareWithEmail} onChange={(e)=>{\n        setShareWithEmail(e.target.value);\n       }} id=\"shareWithEmail\" type=\"email\" ></Input>\n\n<br/>\n          \n       <ButtonPrimary text={sharing ? <SyncOutlined spin /> : 'Share' } onClick={()=>{\n        let k = document.getElementById('shareWithEmail').value;\n        if(k.includes('@') && k.includes('.') && !k.trim().includes(' ')){\n        setSharing(true);\n\n        // let currentShareWith = shareWith;\n        // if(!currentShareWith.includes(k)){ \n        setShareWithEmail(\"\");\n\n        axios.put(API_BASE + '/api/notes/updateNoteAccessibleTo', {\n          noteId: currentNoteId,\n          authorId: localStorage.getItem('bitsjoy_userId'),\n          list: [k]\n      },{\n          headers : {\n              'Authorization' : localStorage.getItem(bearer_token_key),\n              'Content-Type': 'application/json'\n          }\n      }).then((res)=>{\n        console.log(res.data);\n        setShare(false);\n        toast.success('Shared successfully');\n        setSharing(false); \n    \n        //  alert(res.data.body);\n      }).catch((err)=>{\n          toast.error(err.response.data.message);\n          setSharing(false); \n    \n    \n    \n      })\n        // }\n        } else {\n          toast.error('Please provide a valid email');\n        }\n        }}>\n        </ButtonPrimary>\n        \n      </Modal>\n    </> \n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/home/index.js",["115"],[],"import { Row, Col, Card } from 'antd'\nimport React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { diary, noteMaker, time, writer } from '../../assets'\n\nexport default function Home() {\n\n  let navigate = useNavigate();\n  const date = new Date();\n\n  const CardStyle = {\n    textAlign: 'left',\n    width:'90%',  \n    padding: '10px',\n    borderTop: '2px solid silver',\n    border: '0px',\n    display: 'inline-block',\n    marginBottom: '50px',\n    fontWeight: '700'\n  }\n\n  // const onclick = () => {\n  //   if(window.innerHeight > window.innerWidth){\n  //     for( let i = 0; i<=4 ; i++){\n  //       if(i%2 == 1){\n  //         document.getElementById(`home-${i}`).style.transform = 'translate(200vw, 0px)';\n  //       } else {\n  //         document.getElementById(`home-${i}`).style.transform = 'translate(-200vw, 0px)';\n  //       }\n  //     }\n  //   } else {\n  //     for( let i = 0; i<=4 ; i++){\n  //       if(i%2 == 1){\n  //         document.getElementById(`home-${i}`).style.transform = 'translate(0px, 200vh)';\n  //       } else {\n  //         document.getElementById(`home-${i}`).style.transform = 'translate(0px, -200vh)';\n  //       }\n  //     }\n  //   }\n   \n    // document.getElementById(x).style.borderRadius = '50%';\n  //}\n\n  return (\n    <div id=\"apps-home\" style={{minHeight: '100vh'}}>\n      <br/>\n      {/* <h1 style={{fontFamily: 'Italianno'}}>{date.getHours() < 12 ? <span>Good &nbsp; Morning! </span>: date.getHours() < 16 ? <span>Good &nbsp;Afternoon! </span>: <span>Good &nbsp;Evening! </span>}</h1> */}\n      <div align=\"center\" id=\"home-0\" style={{fontFamily: 'Italianno', fontSize: '45px'}}>Tool kit</div>\n<br/>\n      <Row>\n        <br/>\n        <Col id=\"home-1\"  xs={{span: '24'}} md={{span: '6'}} align=\"center\"> \n        <Card\n        onClick={(e)=>{\n          // onclick();\n          setTimeout(()=>{\n            navigate('/notes')\n          }, 0)\n        }}\n    hoverable\n    style={{...CardStyle, paddingTop: '35px'}}\n    cover={<img alt=\"note-maker\" style={{width: '60%', margin: 'auto'}} src={noteMaker} />}\n  >\n    <Card.Meta title=\"NOTES\" description=\"Lets save some of your time and a lot of trees\" />\n  </Card>\n</Col>\n\n\n \n\n\n<Col id=\"home-2\" xs={{span: '24'}} md={{span: '6'}} align=\"center\"> \n\n<Card\n  hoverable\n  style={{...CardStyle, paddingTop: '50px'}}\n\n  cover={<img alt=\"diary\" style={{width: '50%', margin: 'auto'}}  src={diary} />}\n>\n  <Card.Meta title=\"DAILY DIARY\" description=\"Story of your life, every single day is a new chapters\" />\n</Card>\n      </Col>\n\n\n\n\n      <Col id=\"home-3\" xs={{span: '24'}} md={{span: '6'}}> \n\n<Card\n  hoverable\n  style={{...CardStyle, paddingTop: '40px'}}\n\n  cover={<img alt=\"writer\" style={{width: '60%', margin: 'auto'}}  src={writer} />}\n>\n  <Card.Meta title=\"NEW HABIT\" description=\"All-in-one tool for writing a book, organise your thoughts efficiently\" />\n</Card>\n      </Col>\n\n\n\n\n\n        <Col id=\"home-4\" xs={{span: '24'}} md={{span: '6'}}>  \n  <Card\n    hoverable\n    style={{...CardStyle, paddingTop: '28px'}}\n\n    cover={<img alt=\"timer\" style={{width: '45%', margin: 'auto'}}  src={time} />}\n  >\n    <Card.Meta title=\"TIME MANAGER\" description=\"Small changes are often underestimated\" />\n  </Card>\n\n        </Col>\n      </Row>\n      <br/>\n      </div>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/userAutentication.js/index.js",["116","117","118","119","120","121"],[],"import { Col, Input, Row, Button } from 'antd'\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { API_BASE } from '../../apiConfig';\nimport ButtonPrimary from '../../components/Button'\nimport { bearer_token_key } from '../../localStorageConfig'; \nimport jwt_decode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { btnBackgroundColor } from '../../uiConfig';\nimport { dq, imgHome } from '../../assets';  \nimport Footer from '../../components/Footer';\nimport { DoubleLeftOutlined, QqOutlined } from '@ant-design/icons';\n\nexport default function UserAuthentication() {\n \n\n const [ date, setDate ] = useState(new Date());\n  setTimeout(()=>{ \n    setDate(new Date());\n  }, 60000)\n\n  const [ authType, setAuthType ] = useState(0); // 0 = login, 1 = signup\n  const [ email, setEmail ] = useState(null);\n  const [ fullName, setFullName ] = useState(null);\n  const [ ppImageLink, setPpimageLink ] = useState(null);\n  const [ password, setPassword ] = useState(null);\n  const [ confirmPassword, setConfirmPassword ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n \n\n  function handleCredentialResponse(response) {\n\n    const credentialsObject = jwt_decode(response.credential);\n    setFullName(credentialsObject.name);\n    setPpimageLink(credentialsObject.picture);\n\n    console.log( credentialsObject);\n\n    axios.post(API_BASE + '/api/auth/doesemailexist', {\n        email: credentialsObject.email\n    }).then(res => {\n        console.log(res + \"kkkk\");\n        toast.error('Account already exists, please login with email and password');\n        setAuthType(0);\n    }).catch((err) => {\n        //  \n    })\n\n    setEmail(credentialsObject.email);\n    setAuthType(1);\n  }\n\n  useEffect(() => { \n        {/* global google */}  \n            google.accounts.id.initialize({\n              client_id: \"137646467401-h5uamu34eshjngcqhcatmsmedu4brv9r.apps.googleusercontent.com\",\n              callback: handleCredentialResponse\n            });\n            google.accounts.id.renderButton(\n              document.getElementById(\"signinButtonDiv\"),\n              { theme: \"outline\", size: \"medium\", text: \"signup_with\" }  // customization attributes\n            );\n            // google.accounts.id.prompt(); // also display the One Tap dialog \n \n    \n  }, [])\n\n  return (\n    <> \n    <Row>\n        {/* md */}\n        <Col xs={{span: 0}} md={{span: 24}}>\n            <div align=\"left\" style={{padding: '20px 20px 20px 0px', border: `0px solid ${btnBackgroundColor}`, fontFamily: 'Poppins', fontWeight: '600' }}>\n            {/* <h1 style={{fontFamily: 'Italianno'}}>Hello!</h1> */}\n                \n                <h1 style={{ color: btnBackgroundColor }}>Your collection of utility tools to organize life with joy!</h1>\n            </div>\n        </Col>\n        {/* xs */}\n        <Col xs={{span: 24}} md={{span: 0}}>\n            <div align=\"left\" style={{padding: '20px 20px 20px 0px', border: `0px solid ${btnBackgroundColor}`, fontFamily: 'Poppins', fontWeight: '600' }}>\n            {/* <h1 style={{color: '', fontFamily: 'Italianno'}}>Hello!</h1> */}\n                \n                <h2 style={{ color: btnBackgroundColor }}>Your collection of utility tools to organize life with joy!</h2>\n            </div>\n        </Col>\n    </Row>\n    <br/> \n        <Row style={{fontFamily: 'Raleway'}}>\n        <Col xs={{span: 24}} md={{span: 0}} align=\"center\" style={{marginBottom: '0px', height: 'auto'}}>\n                {/* <img src={imgHome} style={{marginRight: '0px', width :'70%', marginBottom: '0px'}} alt=\"Loading ...\"/> */}\n            <br/>\n            <br/> \n            </Col>\n            <Col style={{marginBottom: '150px'}} xs={{span: 24}} md={{span: 8}}>\n                <br/>\n                <br/>\n                <br/>\n                <h2 align=\"left\" style={{color: btnBackgroundColor, borderBottom: `1px solid ${btnBackgroundColor}`}}> Log in to get started</h2>\n                <br/>\n                {/* <div id=\"signinButtonDiv\" style={{display: `${authType == 1 ? \"block\" : \"none\"}`}}></div> */}\n              <Input value={email} disabled={ authType == 1} required='true' size='large' type=\"text\" placeholder={ email? email : 'Email' } onChange={(e)=>{\n                    setEmail(e.target.value);\n                }}/>  \n                <br/>\n                <br/> <Input value={password} required={true} size='large' type=\"Password\" placeholder='password' onChange={(e)=>{\n                    setPassword(e.target.value);\n                }}/> \n                <br/>\n                <br/>\n                { \n                    authType === 1 ? <div align=\"left\"> \n                    <span style={{color: `${password === confirmPassword ? 'green': 'red'}`}}>{password === confirmPassword ? '' : 'passwords do not match'}</span>\n                        \n                        <Input value={confirmPassword} required='true' size='large' type=\"password\" placeholder='Confirm password' onChange={(e)=>{\n                        setConfirmPassword(e.target.value);\n                    }}/>\n                    \n                    <br/>\n\n                    <br/>\n                    </div> : null\n                }    \n                <div align=\"left\">\n                    <ButtonPrimary\n                    // disabledCondition={!(email && confirmPassword ? password === confirmPassword : password)}\n                    text={`${ loading ? 'loading' : authType === 0 ? 'Log in' : 'Save and Continue'}`} onClick={()=>{\n                        setLoading(true);\n                        if(authType === 0){\n                            axios.post( API_BASE + \"/api/auth/login\",\n                            {\n                                \"email\": email,\n                                \"password\": password\n                            }).then(res => { \n                                console.log(res.data); \n                                if(res.data.token){\n                                localStorage.setItem(bearer_token_key, res.data.token);\n                                localStorage.setItem(\"bitsjoy_email\", res.data.email);\n                                localStorage.setItem(\"bitsjoy_name\", res.data.fullName);\n                                localStorage.setItem(\"bitsjoy_pp_image\", res.data.ppImageLink);\n                                localStorage.setItem(\"bitsjoy_userId\", res.data.userId);\n                               window.location.reload();\n                                } else {\n                                toast.error(\"something went wrong!\");\n                                }\n                        setLoading(false);\n                            }).catch(err => {\n                                toast.error(err);\n                        setLoading(false);\n                            })\n                        } else if(authType === 1) {\n                            axios.post( API_BASE + \"/api/auth/signup\",\n                            {\n                                \"email\": email,\n                                \"password\": password,\n                                \"fullName\": fullName,\n                                \"ppImageLink\": ppImageLink\n\n                            }).then(res => { \n                                // console.log(res);\n                                localStorage.setItem(bearer_token_key, res.data.token);\n                                localStorage.setItem(\"bitsjoy_email\", res.data.email);\n                                localStorage.setItem(\"bitsjoy_name\", res.data.fullName);\n                                localStorage.setItem(\"bitsjoy_pp_image\", res.data.ppImageLink);\n                                localStorage.setItem(\"bitsjoy_userId\", res.data.userId);\n                        setLoading(false);\n\n                            }).then(()=>{\n                               // history('/onboarding');\n                               window.location.reload();\n                            }).catch(err => {\n                                toast.error(err);\n                        setLoading(false);\n\n                            })\n                        }\n                    }}/> \n                    &nbsp; &nbsp; Or \n                    { authType === 1 ? <Button onClick={()=>{\n                        setEmail(null);\n                        setPassword(null);\n                        setConfirmPassword(null);\n                        setAuthType(authType === 0 ? 1 : 0);\n                    }} type='link'>Log in</Button> : null\n                }\n\n                 \n                <span id=\"signinButtonDiv\" style={{display: `${authType == 0 ? 'inline-block' : 'none'}`, marginLeft: '20px', transform: 'translate(0px, 13px)'}}></span>\n\n                </div> \n            </Col>\n            <Col xs={{span: 0}} md={{span: 16}} align=\"center\">\n                {/* <img src={imgHome} style={{marginRight: '0px', width :'45%'}} alt=\"Loading ...\"/> */}\n                <div style={{width: '60%', borderRadius: '15px', borderTop: `0px solid ${btnBackgroundColor}`, borderRight: `0px solid ${btnBackgroundColor}`, padding: '30px'}}>\n                    <div align=\"right\"><img src={imgHome} style={{width: '100px'}} alt=\"oimgjhome\" /></div>\n                    <div style={{fontSize: '23px' }} align=\"left\">\n                         <img src={dq} style={{width: '80px', marginTop: '-40px'}} alt=\"''\"/> &nbsp;\n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been \n                    \n                    </div>\n                    <h3 align=\"right\"> \n                    - Romita Sharma</h3>\n                </div>\n            </Col>\n        </Row>\n        <Footer />\n    </>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/verifyOneTimePayment/index.js",[],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/profilePage/index.js",[],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/uiConfig.js",[],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/apiConfig.js",[],[],"/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/components/Button.js",["122"],[],"import { LoadingOutlined, SyncOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport React from 'react'\nimport { btnBackgroundColor, btnTextColor } from '../uiConfig'; \n\nexport default function ButtonPrimary(props) {\n  const { text, onClick, disabledCondition, styl, id } = props;\n  return (\n    <Button disabled={disabledCondition} id={id} style={{backgroundColor: btnBackgroundColor, color: btnTextColor, border: '0px', ...styl}} onClick={onClick}>{text === 'loading' ? <SyncOutlined spin/> : text}</Button>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/noteMaker/viewer.js",["123","124","125","126","127"],[],"import { CloseOutlined, DeleteOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { Col, Row } from 'antd'\nimport axios from 'axios'\nimport React from 'react'\nimport { toast } from 'react-toastify'\nimport { API_BASE } from '../../apiConfig'\nimport { bearer_token_key } from '../../localStorageConfig'\nimport { btnBackgroundColor } from '../../uiConfig'\n\nexport default function Viewer(props) {\n  return (\n    <div style={{ overflowY: 'auto', display: '', border: `0px solid ${btnBackgroundColor}`, borderRight: '0px', borderLeft: '0px', backgroundColor: '#F8F8F8', padding: '20px', margin: '20px', marginTop: '0px'}} align=\"left\">\n            <Row>\n                <Col span={12}><span style={{paddingRight: '20px', paddingBottom: '5px', fontSize: '17px'}}>{props.title}</span></Col>\n            <Col span={12} align=\"right\">\n            <CloseOutlined size=\"large\" onClick={props.close} style={{position: 'revert', right: '0px'}} />\n            \n            </Col>\n            </Row>\n            \n             <br/>\n             <br/>\n            {props.loading ? <LoadingOutlined /> : <div style={{height: '60vh', overFlowY: 'scroll'}}  dangerouslySetInnerHTML={{__html: props.rawHtmlBody}}></div>}\n    </div>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/pages/noteMaker/fee.js",["128","129","130","131","132"],[],"import { BookOutlined, CiCircleFilled, DotChartOutlined, LoadingOutlined, PlayCircleFilled, SyncOutlined } from '@ant-design/icons'\nimport { Col, List, Row } from 'antd'\nimport React, { useEffect } from 'react'\nimport { btnBackgroundColor } from '../../uiConfig'\n\nexport default function Fee() {\n    useEffect(()=>{\n        localStorage.setItem('payment_for_product', 'Notes')\n    }, [])\n  return (\n    <div>\n        <Row>\n            <Col span={24} align=\"center\">\n                <Row>\n                    <Col xs={{span: 24}} md={{span: 16}} align=\"center\">\n                        <iframe style={{ borderRadius: '10px', width: '90%', height: '50vh'}} src=\"https://www.youtube.com/embed/4yFfr1myDg8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                        <br/>\n                <span>Price after Early Bird discount :<span style={{fontSize: '36px', color: 'goldenrod'}}> <br/>  <sup>&#x20B9;</sup>99 <s style={{color: 'silver', fontSize: '21px', color: 'silver'}}>&nbsp;<sup>&#x20B9;</sup> 499 &nbsp;</s> </span></span>\n                <br/>\n                <br/>\n                <form id=\"rz_form\"> </form>\n                        <br/> \n                    </Col>\n                    <Col xs={{span: 0}} md={{span: 8}} align=\"left\">\n                        {/* <iframe style={{width: '50vw', height: '50vh'}} src=\"https://www.youtube.com/embed/4yFfr1myDg8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n                        <h1 style={{ paddingLeft:'0px', color: 'goldenrod', border: `0px solid ${'goldenrod'}`, display: 'inline'}}>Notes <BookOutlined  /> </h1>\n                        <br/>\n                        <br/>\n                        <List>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Create a new collection of Notes</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Add note to a collection</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Insert image in a Note</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Update a Note</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Delete a Note</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Sharing Notes with friends</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Download a Note as pdf</List.Item>\n                        </List>\n                    \n                    </Col>\n                </Row> \n                <br/>\n                <Row>\n                    \n\n                    <Col xs={{span: 24}} md={{span: 0}}>\n                         \n                        <h1 align=\"center\" style={{paddingLeft:'0px', color: 'goldenrod', borderBottom: `0px solid ${'goldenrod'}`, display: 'inline', padding: '0px 10px'}}> <BookOutlined  /> Features </h1>\n                         \n                        <br/>\n                    <List align=\"left\">\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Create a new collection of Notes</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Add note to a collection</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Insert image in a Note</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Update a Note</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Delete a Note</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Sharing Notes with friends</List.Item>\n                            <List.Item style={{color: btnBackgroundColor}}><PlayCircleFilled/> &nbsp; Download a Note as pdf</List.Item>\n                        </List>\n                       {/* <iframe style={{width: '80vw', height: 'auto'}} src=\"https://www.youtube.com/embed/4yFfr1myDg8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n                    </Col>\n                </Row>\n                \n            </Col>\n        </Row>\n    </div>\n  )\n}\n","/Users/neeleshsharma/Desktop/bitsjoy/it-fe-/src/assets/index.js",[],[],{"ruleId":"133","severity":1,"message":"134","line":23,"column":10,"nodeType":"135","messageId":"136","endLine":23,"endColumn":21},{"ruleId":"133","severity":1,"message":"137","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"138","line":1,"column":28,"nodeType":"135","messageId":"136","endLine":1,"endColumn":45},{"ruleId":"133","severity":1,"message":"139","line":1,"column":47,"nodeType":"135","messageId":"136","endLine":1,"endColumn":63},{"ruleId":"133","severity":1,"message":"140","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":15},{"ruleId":"133","severity":1,"message":"141","line":2,"column":28,"nodeType":"135","messageId":"136","endLine":2,"endColumn":40},{"ruleId":"133","severity":1,"message":"142","line":3,"column":15,"nodeType":"135","messageId":"136","endLine":3,"endColumn":23},{"ruleId":"133","severity":1,"message":"143","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":28},{"ruleId":"133","severity":1,"message":"144","line":7,"column":41,"nodeType":"135","messageId":"136","endLine":7,"endColumn":56},{"ruleId":"133","severity":1,"message":"145","line":10,"column":17,"nodeType":"135","messageId":"136","endLine":10,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":114,"column":6,"nodeType":"148","endLine":114,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":118,"column":47,"nodeType":"152","messageId":"153","endLine":118,"endColumn":49},{"ruleId":"150","severity":1,"message":"154","line":168,"column":48,"nodeType":"152","messageId":"153","endLine":168,"endColumn":50},{"ruleId":"150","severity":1,"message":"154","line":217,"column":52,"nodeType":"152","messageId":"153","endLine":217,"endColumn":54},{"ruleId":"150","severity":1,"message":"154","line":259,"column":46,"nodeType":"152","messageId":"153","endLine":259,"endColumn":48},{"ruleId":"150","severity":1,"message":"154","line":267,"column":63,"nodeType":"152","messageId":"153","endLine":267,"endColumn":65},{"ruleId":"150","severity":1,"message":"154","line":349,"column":47,"nodeType":"152","messageId":"153","endLine":349,"endColumn":49},{"ruleId":"150","severity":1,"message":"154","line":358,"column":52,"nodeType":"152","messageId":"153","endLine":358,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":439,"column":49,"nodeType":"152","messageId":"153","endLine":439,"endColumn":51},{"ruleId":"133","severity":1,"message":"155","line":9,"column":9,"nodeType":"135","messageId":"136","endLine":9,"endColumn":13},{"ruleId":"133","severity":1,"message":"156","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":28},{"ruleId":"133","severity":1,"message":"157","line":12,"column":30,"nodeType":"135","messageId":"136","endLine":12,"endColumn":40},{"ruleId":"133","severity":1,"message":"155","line":17,"column":10,"nodeType":"135","messageId":"136","endLine":17,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":54,"column":9,"nodeType":"160","messageId":"161","endLine":54,"endColumn":30},{"ruleId":"150","severity":1,"message":"154","line":102,"column":56,"nodeType":"152","messageId":"153","endLine":102,"endColumn":58},{"ruleId":"150","severity":1,"message":"154","line":188,"column":73,"nodeType":"152","messageId":"153","endLine":188,"endColumn":75},{"ruleId":"133","severity":1,"message":"144","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"162","line":1,"column":25,"nodeType":"135","messageId":"136","endLine":1,"endColumn":39},{"ruleId":"133","severity":1,"message":"163","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"140","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":15},{"ruleId":"133","severity":1,"message":"164","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},{"ruleId":"133","severity":1,"message":"165","line":7,"column":10,"nodeType":"135","messageId":"136","endLine":7,"endColumn":26},{"ruleId":"133","severity":1,"message":"166","line":1,"column":24,"nodeType":"135","messageId":"136","endLine":1,"endColumn":38},{"ruleId":"133","severity":1,"message":"167","line":1,"column":40,"nodeType":"135","messageId":"136","endLine":1,"endColumn":56},{"ruleId":"133","severity":1,"message":"144","line":1,"column":58,"nodeType":"135","messageId":"136","endLine":1,"endColumn":73},{"ruleId":"133","severity":1,"message":"168","line":1,"column":93,"nodeType":"135","messageId":"136","endLine":1,"endColumn":105},{"ruleId":"169","severity":1,"message":"170","line":18,"column":185,"nodeType":"171","messageId":"153","endLine":18,"endColumn":190},"no-unused-vars","'installable' is assigned a value but never used.","Identifier","unusedVar","'FacebookOutlined' is defined but never used.","'InstagramOutlined' is defined but never used.","'LinkedinOutlined' is defined but never used.","'toast' is defined but never used.","'HomeOutlined' is defined but never used.","'Dropdown' is defined but never used.","'btnBackgroundColor' is defined but never used.","'LoadingOutlined' is defined but never used.","'ToastContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array.","ArrayExpression",["172"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'date' is assigned a value but never used.","'DoubleLeftOutlined' is defined but never used.","'QqOutlined' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'DeleteOutlined' is defined but never used.","'axios' is defined but never used.","'API_BASE' is defined but never used.","'bearer_token_key' is defined but never used.","'CiCircleFilled' is defined but never used.","'DotChartOutlined' is defined but never used.","'SyncOutlined' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression",{"desc":"173","fix":"174"},"Update the dependencies array to be: [notes]",{"range":"175","text":"176"},[3611,3613],"[notes]"]